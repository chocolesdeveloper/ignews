"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrismicSharedConfigManager = exports.DEFAULT_CONFIG = void 0;
const Either_1 = require("fp-ts/lib/Either");
const utils_1 = require("../utils");
const node_utils_1 = require("../node-utils");
const PrismicSharedConfig_1 = require("../models/PrismicSharedConfig");
exports.DEFAULT_CONFIG = {
    base: "https://prismic.io",
    cookies: "",
};
exports.PrismicSharedConfigManager = {
    default() {
        node_utils_1.Files.write(node_utils_1.PrismicConfigPath, JSON.stringify(exports.DEFAULT_CONFIG, null, "\t"), {
            recursive: false,
        });
        return exports.DEFAULT_CONFIG;
    },
    get: () => {
        if (!node_utils_1.Files.exists(node_utils_1.PrismicConfigPath))
            return exports.PrismicSharedConfigManager.default();
        const conf = node_utils_1.Files.safeReadEntity(node_utils_1.PrismicConfigPath, (payload) => {
            return (0, Either_1.getOrElseW)(() => null)(PrismicSharedConfig_1.PrismicSharedConfig.decode(payload));
        });
        return { ...exports.DEFAULT_CONFIG, ...conf };
    },
    getAuth() {
        const config = exports.PrismicSharedConfigManager.get();
        return utils_1.Cookie.parsePrismicAuthToken(config.cookies);
    },
    set(config) {
        node_utils_1.Files.write(node_utils_1.PrismicConfigPath, config, { recursive: false });
    },
    setProperties(props, baseConfig) {
        const config = baseConfig || exports.PrismicSharedConfigManager.get();
        const updated = { ...config, ...props };
        exports.PrismicSharedConfigManager.set(updated);
    },
    setCookie(cookie) {
        const config = exports.PrismicSharedConfigManager.get();
        const cookiesMap = utils_1.Cookie.parse(config.cookies);
        const updatedCookiesMap = { ...cookiesMap, ...cookie };
        const serializedCookies = utils_1.Cookie.serializeCookies(Object.entries(updatedCookiesMap).map(([k, v]) => utils_1.Cookie.serializeCookie(k, v)));
        exports.PrismicSharedConfigManager.setProperties({ cookies: serializedCookies }, config);
    },
    setAuthCookie(authToken) {
        exports.PrismicSharedConfigManager.setCookie({ [utils_1.Cookie.AUTH_KEY]: authToken });
    },
    remove() {
        return node_utils_1.Files.remove(node_utils_1.PrismicConfigPath);
    },
    reset() {
        return exports.PrismicSharedConfigManager.set(exports.DEFAULT_CONFIG);
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2hhcmVkQ29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ByaXNtaWMvU2hhcmVkQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQUE4QztBQUM5QyxvQ0FBa0M7QUFDbEMsOENBQXlEO0FBQ3pELHVFQUFvRTtBQUV2RCxRQUFBLGNBQWMsR0FBd0I7SUFDakQsSUFBSSxFQUFFLG9CQUFvQjtJQUMxQixPQUFPLEVBQUUsRUFBRTtDQUNaLENBQUM7QUFFVyxRQUFBLDBCQUEwQixHQUFHO0lBQ3hDLE9BQU87UUFDTCxrQkFBSyxDQUFDLEtBQUssQ0FBQyw4QkFBaUIsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLHNCQUFjLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFO1lBQ3pFLFNBQVMsRUFBRSxLQUFLO1NBQ2pCLENBQUMsQ0FBQztRQUNILE9BQU8sc0JBQWMsQ0FBQztJQUN4QixDQUFDO0lBRUQsR0FBRyxFQUFFLEdBQXdCLEVBQUU7UUFDN0IsSUFBSSxDQUFDLGtCQUFLLENBQUMsTUFBTSxDQUFDLDhCQUFpQixDQUFDO1lBQ2xDLE9BQU8sa0NBQTBCLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFOUMsTUFBTSxJQUFJLEdBQUcsa0JBQUssQ0FBQyxjQUFjLENBQy9CLDhCQUFpQixFQUNqQixDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ1YsT0FBTyxJQUFBLG1CQUFVLEVBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMseUNBQW1CLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDckUsQ0FBQyxDQUNGLENBQUM7UUFDRixPQUFPLEVBQUUsR0FBRyxzQkFBYyxFQUFFLEdBQUcsSUFBSSxFQUF5QixDQUFDO0lBQy9ELENBQUM7SUFFRCxPQUFPO1FBQ0wsTUFBTSxNQUFNLEdBQUcsa0NBQTBCLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDaEQsT0FBTyxjQUFNLENBQUMscUJBQXFCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFRCxHQUFHLENBQUMsTUFBMkI7UUFDN0Isa0JBQUssQ0FBQyxLQUFLLENBQUMsOEJBQWlCLEVBQUUsTUFBTSxFQUFFLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVELGFBQWEsQ0FDWCxLQUFtQyxFQUNuQyxVQUFnQztRQUVoQyxNQUFNLE1BQU0sR0FBRyxVQUFVLElBQUksa0NBQTBCLENBQUMsR0FBRyxFQUFFLENBQUM7UUFFOUQsTUFBTSxPQUFPLEdBQUcsRUFBRSxHQUFHLE1BQU0sRUFBRSxHQUFHLEtBQUssRUFBRSxDQUFDO1FBQ3hDLGtDQUEwQixDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsU0FBUyxDQUFDLE1BQWlDO1FBQ3pDLE1BQU0sTUFBTSxHQUFHLGtDQUEwQixDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2hELE1BQU0sVUFBVSxHQUFHLGNBQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRWhELE1BQU0saUJBQWlCLEdBQUcsRUFBRSxHQUFHLFVBQVUsRUFBRSxHQUFHLE1BQU0sRUFBRSxDQUFDO1FBRXZELE1BQU0saUJBQWlCLEdBQUcsY0FBTSxDQUFDLGdCQUFnQixDQUMvQyxNQUFNLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUMvQyxjQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FDN0IsQ0FDRixDQUFDO1FBRUYsa0NBQTBCLENBQUMsYUFBYSxDQUN0QyxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxFQUM5QixNQUFNLENBQ1AsQ0FBQztJQUNKLENBQUM7SUFFRCxhQUFhLENBQUMsU0FBaUI7UUFDN0Isa0NBQTBCLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxjQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBRUQsTUFBTTtRQUNKLE9BQU8sa0JBQUssQ0FBQyxNQUFNLENBQUMsOEJBQWlCLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsS0FBSztRQUNILE9BQU8sa0NBQTBCLENBQUMsR0FBRyxDQUFDLHNCQUFjLENBQUMsQ0FBQztJQUN4RCxDQUFDO0NBQ0YsQ0FBQyJ9
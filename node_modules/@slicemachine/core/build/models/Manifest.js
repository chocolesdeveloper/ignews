"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManifestHelper = exports.Manifest = exports.FrameworkCodec = void 0;
const t = __importStar(require("io-ts"));
const Framework_1 = require("./Framework");
const apiEndpoint = new t.Type("apiEndpoint", (input) => typeof input === "string", (input, context) => {
    if (typeof input !== "string")
        return t.failure(input, context, "apiEndpoint should be a string");
    try {
        new URL(input);
    }
    catch {
        return t.failure(input, context, "could not parse apiEndpoint: invalid url.");
    }
    const url = new URL(input);
    if (/\/api\/v2\/?$/.test(url.pathname) === false) {
        return t.failure(input, context, 'apiEndpoint should end with "/api/v2".');
    }
    const regx = new RegExp("^https?://[a-z0-9][a-z0-9-]{2,}[a-z0-9](.cdn)?.(prismic.io|wroom.io|wroom.test)/api/v2/?$", "gi");
    const result = regx.test(input);
    return result
        ? t.success(input)
        : t.failure(input, context, `apiEndpoint should match ${regx.source}`);
}, t.identity);
exports.FrameworkCodec = new t.Type("framework", (input) => Framework_1.FrameworksC.is(input), (input, context) => {
    const frameworks = Object.keys(Framework_1.Frameworks);
    if (typeof input !== "string" || !Framework_1.FrameworksC.is(input)) {
        return t.failure(input, context, `framework should be one of ${frameworks.join(", ")}. Set framework to one of these values or remove it and slice-machine will guess the framework.`);
    }
    return t.success(input);
}, t.identity);
exports.Manifest = t.intersection([
    t.type({
        apiEndpoint,
    }),
    t.partial({
        framework: exports.FrameworkCodec,
        storybook: t.string,
        localSliceSimulatorURL: t.string,
        libraries: t.array(t.string),
        chromaticAppId: t.string,
        _latest: t.string,
        tracking: t.boolean,
    }),
]);
exports.ManifestHelper = {
    localLibraries(manifest) {
        return (manifest.libraries || [])
            .filter((l) => l.startsWith("~/") || l.startsWith("@/"))
            .map((lib) => {
            const prefix = lib.indexOf("~") != -1 ? `~` : `@`;
            return {
                prefix,
                path: lib.replace(`${prefix}/`, ""),
                fullPath: lib,
            };
        });
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFuaWZlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kZWxzL01hbmlmZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5Q0FBMkI7QUFDM0IsMkNBQXNEO0FBRXRELE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxDQUFDLElBQUksQ0FDNUIsYUFBYSxFQUNiLENBQUMsS0FBYyxFQUFtQixFQUFFLENBQUMsT0FBTyxLQUFLLEtBQUssUUFBUSxFQUM5RCxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRTtJQUNqQixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVE7UUFDM0IsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0NBQWdDLENBQUMsQ0FBQztJQUVyRSxJQUFJO1FBQ0YsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDaEI7SUFBQyxNQUFNO1FBQ04sT0FBTyxDQUFDLENBQUMsT0FBTyxDQUNkLEtBQUssRUFDTCxPQUFPLEVBQ1AsMkNBQTJDLENBQzVDLENBQUM7S0FDSDtJQUVELE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTNCLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssS0FBSyxFQUFFO1FBQ2hELE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FDZCxLQUFLLEVBQ0wsT0FBTyxFQUNQLHdDQUF3QyxDQUN6QyxDQUFDO0tBQ0g7SUFFRCxNQUFNLElBQUksR0FBRyxJQUFJLE1BQU0sQ0FDckIsMkZBQTJGLEVBQzNGLElBQUksQ0FDTCxDQUFDO0lBQ0YsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVoQyxPQUFPLE1BQU07UUFDWCxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFL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
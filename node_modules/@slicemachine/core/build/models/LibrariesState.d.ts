import * as t from "io-ts";
export declare const ComponentMocksRecord: t.RecordC<t.StringC, t.TypeC<{
    variation: t.StringC;
    name: t.StringC;
    slice_type: t.StringC;
    items: t.ArrayC<t.UnknownC>;
    primary: t.RecordC<t.StringC, t.UnknownC>;
}>>;
export declare type ComponentMocksRecord = t.TypeOf<typeof ComponentMocksRecord>;
export declare const ComponentMeta: t.TypeC<{
    fileName: t.UnionC<[t.StringC, t.NullC]>;
    extension: t.UnionC<[t.StringC, t.NullC]>;
}>;
export declare type ComponentMeta = t.TypeOf<typeof ComponentMeta>;
declare const ComponentScreenshots: t.RecordC<t.StringC, t.TypeC<{
    path: t.UnionC<[t.StringC, t.UndefinedC]>;
    width: t.UnionC<[t.NumberC, t.UndefinedC]>;
    height: t.UnionC<[t.NumberC, t.UndefinedC]>;
}>>;
export declare type ComponentScreenshots = t.TypeOf<typeof ComponentScreenshots>;
export declare const Component: t.IntersectionC<[t.TypeC<{
    id: t.StringC;
    library: t.StringC;
    model: t.ExactC<t.IntersectionC<[t.TypeC<{
        id: t.StringC;
        type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/slices/SlicesTypes").default.SharedSlice>;
        name: t.StringC;
        variations: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
            id: t.StringC;
            name: t.StringC;
            description: t.StringC;
            imageUrl: t.StringC;
            docURL: t.StringC;
            version: t.StringC;
        }>, t.PartialC<{
            display: t.StringC;
            primary: t.RecordC<t.StringC, t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Color>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.BooleanField>;
            }>, t.PartialC<{
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    default_value: t.BooleanC;
                    placeholder_true: t.StringC;
                    placeholder_false: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Embed>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    useAsTitle: t.BooleanC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.GeoPoint>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Date>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    default: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Number>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Range>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.RichText>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    useAsTitle: t.BooleanC;
                    single: t.Type<string, string, unknown>;
                    multi: t.Type<string, string, unknown>;
                    imageConstraint: t.PartialC<{
                        width: t.Type<number | null, unknown, unknown>;
                        height: t.Type<number | null, unknown, unknown>;
                    }>;
                    labels: t.Type<string[], object, unknown>;
                    allowTargetBlank: t.BooleanC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Select>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    default_value: t.StringC;
                    options: t.ArrayC<t.UnionC<[t.StringC, t.Type<string, string, unknown>, t.Type<string, string, unknown>]>>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Separator>;
            }>, t.PartialC<{
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Text>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    useAsTitle: t.BooleanC;
                    placeholder: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Timestamp>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    default: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Link>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    useAsTitle: t.BooleanC;
                    placeholder: t.StringC;
                    select: t.UnionC<[t.LiteralC<"media">, t.LiteralC<"document">, t.LiteralC<"web">, t.NullC]>;
                    customtypes: t.ArrayC<t.StringC>;
                    masks: t.Type<string[], object, unknown>;
                    tags: t.Type<string[], object, unknown>;
                    allowTargetBlank: t.BooleanC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Image>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    constraint: t.PartialC<{
                        width: t.Type<number | null, unknown, unknown>;
                        height: t.Type<number | null, unknown, unknown>;
                    }>;
                    thumbnails: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
                        name: t.StringC;
                    }>, t.PartialC<{
                        width: t.Type<number | null, unknown, unknown>;
                        height: t.Type<number | null, unknown, unknown>;
                    }>]>>>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.IntegrationField>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    catalog: t.StringC;
                }>>;
            }>]>>]>>;
            items: t.RecordC<t.StringC, t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Color>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.BooleanField>;
            }>, t.PartialC<{
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    default_value: t.BooleanC;
                    placeholder_true: t.StringC;
                    placeholder_false: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Embed>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    useAsTitle: t.BooleanC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.GeoPoint>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Date>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    default: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Number>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Range>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.RichText>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    useAsTitle: t.BooleanC;
                    single: t.Type<string, string, unknown>;
                    multi: t.Type<string, string, unknown>;
                    imageConstraint: t.PartialC<{
                        width: t.Type<number | null, unknown, unknown>;
                        height: t.Type<number | null, unknown, unknown>;
                    }>;
                    labels: t.Type<string[], object, unknown>;
                    allowTargetBlank: t.BooleanC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Select>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    default_value: t.StringC;
                    options: t.ArrayC<t.UnionC<[t.StringC, t.Type<string, string, unknown>, t.Type<string, string, unknown>]>>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Separator>;
            }>, t.PartialC<{
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Text>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    useAsTitle: t.BooleanC;
                    placeholder: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Timestamp>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    default: t.StringC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Link>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    useAsTitle: t.BooleanC;
                    placeholder: t.StringC;
                    select: t.UnionC<[t.LiteralC<"media">, t.LiteralC<"document">, t.LiteralC<"web">, t.NullC]>;
                    customtypes: t.ArrayC<t.StringC>;
                    masks: t.Type<string[], object, unknown>;
                    tags: t.Type<string[], object, unknown>;
                    allowTargetBlank: t.BooleanC;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Image>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    constraint: t.PartialC<{
                        width: t.Type<number | null, unknown, unknown>;
                        height: t.Type<number | null, unknown, unknown>;
                    }>;
                    thumbnails: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
                        name: t.StringC;
                    }>, t.PartialC<{
                        width: t.Type<number | null, unknown, unknown>;
                        height: t.Type<number | null, unknown, unknown>;
                    }>]>>>;
                }>>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.IntegrationField>;
            }>, t.PartialC<{
                fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                config: t.ExactC<t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    placeholder: t.StringC;
                    catalog: t.StringC;
                }>>;
            }>]>>]>>;
        }>]>>>;
    }>, t.PartialC<{
        description: t.StringC;
    }>]>>;
    mocks: t.RecordC<t.StringC, t.TypeC<{
        variation: t.StringC;
        name: t.StringC;
        slice_type: t.StringC;
        items: t.ArrayC<t.UnknownC>;
        primary: t.RecordC<t.StringC, t.UnknownC>;
    }>>;
    meta: t.TypeC<{
        fileName: t.UnionC<[t.StringC, t.NullC]>;
        extension: t.UnionC<[t.StringC, t.NullC]>;
    }>;
}>, t.PartialC<{
    screenshotPaths: t.RecordC<t.StringC, t.TypeC<{
        path: t.UnionC<[t.StringC, t.UndefinedC]>;
        width: t.UnionC<[t.NumberC, t.UndefinedC]>;
        height: t.UnionC<[t.NumberC, t.UndefinedC]>;
    }>>;
    name: t.StringC;
    description: t.StringC;
}>]>;
export declare type Component = t.TypeOf<typeof Component>;
export declare const Library: t.TypeC<{
    name: t.UnionC<[t.StringC, t.UndefinedC]>;
    version: t.UnionC<[t.StringC, t.UndefinedC]>;
    components: t.RecordC<t.StringC, t.IntersectionC<[t.TypeC<{
        id: t.StringC;
        library: t.StringC;
        model: t.ExactC<t.IntersectionC<[t.TypeC<{
            id: t.StringC;
            type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/slices/SlicesTypes").default.SharedSlice>;
            name: t.StringC;
            variations: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
                id: t.StringC;
                name: t.StringC;
                description: t.StringC;
                imageUrl: t.StringC;
                docURL: t.StringC;
                version: t.StringC;
            }>, t.PartialC<{
                display: t.StringC;
                primary: t.RecordC<t.StringC, t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Color>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.BooleanField>;
                }>, t.PartialC<{
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        default_value: t.BooleanC;
                        placeholder_true: t.StringC;
                        placeholder_false: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Embed>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        useAsTitle: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.GeoPoint>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Date>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Number>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Range>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.RichText>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        useAsTitle: t.BooleanC;
                        single: t.Type<string, string, unknown>;
                        multi: t.Type<string, string, unknown>;
                        imageConstraint: t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>;
                        labels: t.Type<string[], object, unknown>;
                        allowTargetBlank: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Select>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default_value: t.StringC;
                        options: t.ArrayC<t.UnionC<[t.StringC, t.Type<string, string, unknown>, t.Type<string, string, unknown>]>>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Separator>;
                }>, t.PartialC<{
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Text>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        useAsTitle: t.BooleanC;
                        placeholder: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Timestamp>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Link>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        useAsTitle: t.BooleanC;
                        placeholder: t.StringC;
                        select: t.UnionC<[t.LiteralC<"media">, t.LiteralC<"document">, t.LiteralC<"web">, t.NullC]>;
                        customtypes: t.ArrayC<t.StringC>;
                        masks: t.Type<string[], object, unknown>;
                        tags: t.Type<string[], object, unknown>;
                        allowTargetBlank: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Image>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        constraint: t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>;
                        thumbnails: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
                            name: t.StringC;
                        }>, t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>]>>>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.IntegrationField>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        catalog: t.StringC;
                    }>>;
                }>]>>]>>;
                items: t.RecordC<t.StringC, t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Color>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.BooleanField>;
                }>, t.PartialC<{
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        default_value: t.BooleanC;
                        placeholder_true: t.StringC;
                        placeholder_false: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Embed>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        useAsTitle: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.GeoPoint>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Date>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Number>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Range>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.RichText>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        useAsTitle: t.BooleanC;
                        single: t.Type<string, string, unknown>;
                        multi: t.Type<string, string, unknown>;
                        imageConstraint: t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>;
                        labels: t.Type<string[], object, unknown>;
                        allowTargetBlank: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Select>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default_value: t.StringC;
                        options: t.ArrayC<t.UnionC<[t.StringC, t.Type<string, string, unknown>, t.Type<string, string, unknown>]>>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Separator>;
                }>, t.PartialC<{
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Text>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        useAsTitle: t.BooleanC;
                        placeholder: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Timestamp>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Link>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        useAsTitle: t.BooleanC;
                        placeholder: t.StringC;
                        select: t.UnionC<[t.LiteralC<"media">, t.LiteralC<"document">, t.LiteralC<"web">, t.NullC]>;
                        customtypes: t.ArrayC<t.StringC>;
                        masks: t.Type<string[], object, unknown>;
                        tags: t.Type<string[], object, unknown>;
                        allowTargetBlank: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Image>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        constraint: t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>;
                        thumbnails: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
                            name: t.StringC;
                        }>, t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>]>>>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.IntegrationField>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        catalog: t.StringC;
                    }>>;
                }>]>>]>>;
            }>]>>>;
        }>, t.PartialC<{
            description: t.StringC;
        }>]>>;
        mocks: t.RecordC<t.StringC, t.TypeC<{
            variation: t.StringC;
            name: t.StringC;
            slice_type: t.StringC;
            items: t.ArrayC<t.UnknownC>;
            primary: t.RecordC<t.StringC, t.UnknownC>;
        }>>;
        meta: t.TypeC<{
            fileName: t.UnionC<[t.StringC, t.NullC]>;
            extension: t.UnionC<[t.StringC, t.NullC]>;
        }>;
    }>, t.PartialC<{
        screenshotPaths: t.RecordC<t.StringC, t.TypeC<{
            path: t.UnionC<[t.StringC, t.UndefinedC]>;
            width: t.UnionC<[t.NumberC, t.UndefinedC]>;
            height: t.UnionC<[t.NumberC, t.UndefinedC]>;
        }>>;
        name: t.StringC;
        description: t.StringC;
    }>]>>;
}>;
export declare type Library = t.TypeOf<typeof Library>;
export declare const Libraries: t.RecordC<t.StringC, t.TypeC<{
    name: t.UnionC<[t.StringC, t.UndefinedC]>;
    version: t.UnionC<[t.StringC, t.UndefinedC]>;
    components: t.RecordC<t.StringC, t.IntersectionC<[t.TypeC<{
        id: t.StringC;
        library: t.StringC;
        model: t.ExactC<t.IntersectionC<[t.TypeC<{
            id: t.StringC;
            type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/slices/SlicesTypes").default.SharedSlice>;
            name: t.StringC;
            variations: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
                id: t.StringC;
                name: t.StringC;
                description: t.StringC;
                imageUrl: t.StringC;
                docURL: t.StringC;
                version: t.StringC;
            }>, t.PartialC<{
                display: t.StringC;
                primary: t.RecordC<t.StringC, t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Color>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.BooleanField>;
                }>, t.PartialC<{
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        default_value: t.BooleanC;
                        placeholder_true: t.StringC;
                        placeholder_false: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Embed>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        useAsTitle: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.GeoPoint>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Date>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Number>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Range>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.RichText>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        useAsTitle: t.BooleanC;
                        single: t.Type<string, string, unknown>;
                        multi: t.Type<string, string, unknown>;
                        imageConstraint: t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>;
                        labels: t.Type<string[], object, unknown>;
                        allowTargetBlank: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Select>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default_value: t.StringC;
                        options: t.ArrayC<t.UnionC<[t.StringC, t.Type<string, string, unknown>, t.Type<string, string, unknown>]>>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Separator>;
                }>, t.PartialC<{
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Text>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        useAsTitle: t.BooleanC;
                        placeholder: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Timestamp>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Link>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        useAsTitle: t.BooleanC;
                        placeholder: t.StringC;
                        select: t.UnionC<[t.LiteralC<"media">, t.LiteralC<"document">, t.LiteralC<"web">, t.NullC]>;
                        customtypes: t.ArrayC<t.StringC>;
                        masks: t.Type<string[], object, unknown>;
                        tags: t.Type<string[], object, unknown>;
                        allowTargetBlank: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Image>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        constraint: t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>;
                        thumbnails: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
                            name: t.StringC;
                        }>, t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>]>>>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.IntegrationField>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        catalog: t.StringC;
                    }>>;
                }>]>>]>>;
                items: t.RecordC<t.StringC, t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Color>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.BooleanField>;
                }>, t.PartialC<{
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        default_value: t.BooleanC;
                        placeholder_true: t.StringC;
                        placeholder_false: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Embed>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        useAsTitle: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.GeoPoint>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Date>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Number>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Range>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.RichText>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        useAsTitle: t.BooleanC;
                        single: t.Type<string, string, unknown>;
                        multi: t.Type<string, string, unknown>;
                        imageConstraint: t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>;
                        labels: t.Type<string[], object, unknown>;
                        allowTargetBlank: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Select>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default_value: t.StringC;
                        options: t.ArrayC<t.UnionC<[t.StringC, t.Type<string, string, unknown>, t.Type<string, string, unknown>]>>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Separator>;
                }>, t.PartialC<{
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Text>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        useAsTitle: t.BooleanC;
                        placeholder: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Timestamp>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        default: t.StringC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Link>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        useAsTitle: t.BooleanC;
                        placeholder: t.StringC;
                        select: t.UnionC<[t.LiteralC<"media">, t.LiteralC<"document">, t.LiteralC<"web">, t.NullC]>;
                        customtypes: t.ArrayC<t.StringC>;
                        masks: t.Type<string[], object, unknown>;
                        tags: t.Type<string[], object, unknown>;
                        allowTargetBlank: t.BooleanC;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.Image>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        constraint: t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>;
                        thumbnails: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
                            name: t.StringC;
                        }>, t.PartialC<{
                            width: t.Type<number | null, unknown, unknown>;
                            height: t.Type<number | null, unknown, unknown>;
                        }>]>>>;
                    }>>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<import("@prismicio/types-internal/lib/customtypes/widgets/WidgetTypes").default.IntegrationField>;
                }>, t.PartialC<{
                    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    config: t.ExactC<t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        placeholder: t.StringC;
                        catalog: t.StringC;
                    }>>;
                }>]>>]>>;
            }>]>>>;
        }>, t.PartialC<{
            description: t.StringC;
        }>]>>;
        mocks: t.RecordC<t.StringC, t.TypeC<{
            variation: t.StringC;
            name: t.StringC;
            slice_type: t.StringC;
            items: t.ArrayC<t.UnknownC>;
            primary: t.RecordC<t.StringC, t.UnknownC>;
        }>>;
        meta: t.TypeC<{
            fileName: t.UnionC<[t.StringC, t.NullC]>;
            extension: t.UnionC<[t.StringC, t.NullC]>;
        }>;
    }>, t.PartialC<{
        screenshotPaths: t.RecordC<t.StringC, t.TypeC<{
            path: t.UnionC<[t.StringC, t.UndefinedC]>;
            width: t.UnionC<[t.NumberC, t.UndefinedC]>;
            height: t.UnionC<[t.NumberC, t.UndefinedC]>;
        }>>;
        name: t.StringC;
        description: t.StringC;
    }>]>>;
}>>;
export declare type Libraries = t.TypeOf<typeof Libraries>;
export {};

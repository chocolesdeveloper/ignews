"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Libraries = exports.Library = exports.Component = exports.ComponentMeta = exports.ComponentMocksRecord = void 0;
const slices_1 = require("@prismicio/types-internal/lib/customtypes/widgets/slices");
const t = __importStar(require("io-ts"));
const Slice_1 = require("./Slice");
exports.ComponentMocksRecord = t.record(t.string, Slice_1.VariationMock);
exports.ComponentMeta = t.type({
    fileName: t.union([t.string, t.null]),
    extension: t.union([t.string, t.null]),
});
const ComponentScreenshots = t.record(t.string, t.type({
    path: t.union([t.string, t.undefined]),
    width: t.union([t.number, t.undefined]),
    height: t.union([t.number, t.undefined]),
}));
exports.Component = t.intersection([
    t.type({
        id: t.string,
        library: t.string,
        model: slices_1.SharedSlice,
        mocks: exports.ComponentMocksRecord,
        meta: exports.ComponentMeta,
    }),
    t.partial({
        screenshotPaths: ComponentScreenshots,
        name: t.string,
        description: t.string,
    }),
]);
exports.Library = t.type({
    name: t.union([t.string, t.undefined]),
    version: t.union([t.string, t.undefined]),
    components: t.record(t.string, exports.Component),
});
exports.Libraries = t.record(t.string, exports.Library);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlicmFyaWVzU3RhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kZWxzL0xpYnJhcmllc1N0YXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxxRkFBdUY7QUFDdkYseUNBQTJCO0FBQzNCLG1DQUF3QztBQUUzQixRQUFBLG9CQUFvQixHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxxQkFBYSxDQUFDLENBQUM7QUFHekQsUUFBQSxhQUFhLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNsQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLFNBQVMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7Q0FDdkMsQ0FBQyxDQUFDO0FBR0gsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUNuQyxDQUFDLENBQUMsTUFBTSxFQUNSLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDTCxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RDLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdkMsTUFBTSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztDQUN6QyxDQUFDLENBQ0gsQ0FBQztBQUlXLFFBQUEsU0FBUyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7SUFDdEMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDLENBQUMsTUFBTTtRQUNaLE9BQU8sRUFBRSxDQUFDLENBQUMsTUFBTTtRQUNqQixLQUFLLEVBQUUsb0JBQVc7UUFDbEIsS0FBSyxFQUFFLDRCQUFvQjtRQUMzQixJQUFJLEVBQUUscUJBQWE7S0FDcEIsQ0FBQztJQUNGLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFDUixlQUFlLEVBQUUsb0JBQW9CO1FBQ3JDLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTTtRQUNkLFdBQVcsRUFBRSxDQUFDLENBQUMsTUFBTTtLQUN0QixDQUFDO0NBQ0gsQ0FBQyxDQUFDO0FBSVUsUUFBQSxPQUFPLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUM1QixJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RDLE9BQU8sRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDekMsVUFBVSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxpQkFBUyxDQUFDO0NBQzFDLENBQUMsQ0FBQztBQUlVLFFBQUEsU0FBUyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxlQUFPLENBQUMsQ0FBQyJ9
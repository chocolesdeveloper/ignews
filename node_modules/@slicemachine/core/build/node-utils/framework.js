"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defineFramework = exports.detectFramework = exports.fancyName = exports.isFrameworkSupported = exports.UnsupportedFrameWorks = exports.Frameworks = void 0;
const pkg_1 = require("./pkg");
const Framework_1 = require("../models/Framework");
var Framework_2 = require("../models/Framework");
Object.defineProperty(exports, "Frameworks", { enumerable: true, get: function () { return Framework_2.Frameworks; } });
exports.UnsupportedFrameWorks = Object.values(Framework_1.Frameworks).filter((framework) => !Framework_1.SupportedFrameworks.includes(framework));
function isFrameworkSupported(framework) {
    return Framework_1.SupportedFrameworks.includes(framework);
}
exports.isFrameworkSupported = isFrameworkSupported;
function capitaliseFirstLetter(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
}
function fancyName(str) {
    switch (str) {
        case Framework_1.Frameworks.next:
            return "Next.js";
        default:
            return capitaliseFirstLetter(str);
    }
}
exports.fancyName = fancyName;
function detectFramework(pkg, supportedFrameworks = Framework_1.SupportedFrameworks) {
    const { dependencies, devDependencies, peerDependencies } = pkg;
    const deps = { ...peerDependencies, ...devDependencies, ...dependencies };
    const frameworkEntry = Object.values(supportedFrameworks).find((f) => deps[f] && deps[f].length);
    return frameworkEntry || Framework_1.Frameworks.vanillajs;
}
exports.detectFramework = detectFramework;
function defineFramework({ cwd, supportedFrameworks = Framework_1.SupportedFrameworks, manifest, }) {
    if ((manifest === null || manifest === void 0 ? void 0 : manifest.framework) && isFrameworkSupported(manifest.framework))
        return manifest.framework;
    const pkg = (0, pkg_1.retrieveJsonPackage)(cwd);
    if (!pkg.exists || !pkg.content) {
        const message = "[api/env]: Unrecoverable error. Could not find package.json. Exiting..";
        console.error(message);
        throw new Error(message);
    }
    return detectFramework(pkg.content, supportedFrameworks);
}
exports.defineFramework = defineFramework;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJhbWV3b3JrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL25vZGUtdXRpbHMvZnJhbWV3b3JrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLCtCQUF5RDtBQUN6RCxtREFBc0U7QUFHdEUsaURBQWlEO0FBQXhDLHVHQUFBLFVBQVUsT0FBQTtBQUVOLFFBQUEscUJBQXFCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxzQkFBVSxDQUFDLENBQUMsTUFBTSxDQUNuRSxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQywrQkFBbUIsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQ3hELENBQUM7QUFFRixTQUFnQixvQkFBb0IsQ0FBQyxTQUFxQjtJQUN4RCxPQUFPLCtCQUFtQixDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNqRCxDQUFDO0FBRkQsb0RBRUM7QUFFRCxTQUFTLHFCQUFxQixDQUFDLEdBQVc7SUFDeEMsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsQ0FBQztBQUVELFNBQWdCLFNBQVMsQ0FBQyxHQUFlO0lBQ3ZDLFFBQVEsR0FBRyxFQUFFO1FBQ1gsS0FBSyxzQkFBVSxDQUFDLElBQUk7WUFDbEIsT0FBTyxTQUFTLENBQUM7UUFDbkI7WUFDRSxPQUFPLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQ3JDO0FBQ0gsQ0FBQztBQVBELDhCQU9DO0FBRUQsU0FBZ0IsZUFBZSxDQUM3QixHQUFnQixFQUNoQixzQkFBb0MsK0JBQW1CO0lBRXZELE1BQU0sRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLEdBQUcsR0FBRyxDQUFDO0lBQ2hFLE1BQU0sSUFBSSxHQUFHLEVBQUUsR0FBRyxnQkFBZ0IsRUFBRSxHQUFHLGVBQWUsRUFBRSxHQUFHLFlBQVksRUFBRSxDQUFDO0lBRTFFLE1BQU0sY0FBYyxHQUEyQixNQUFNLENBQUMsTUFBTSxDQUMxRCxtQkFBbUIsQ0FDcEIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDekMsT0FBTyxjQUFjLElBQUksc0JBQVUsQ0FBQyxTQUFTLENBQUM7QUFDaEQsQ0FBQztBQVhELDBDQVdDO0FBRUQsU0FBZ0IsZUFBZSxDQUFDLEVBQzlCLEdBQUcsRUFDSCxtQkFBbUIsR0FBRywrQkFBbUIsRUFDekMsUUFBUSxHQUtUO0lBQ0MsSUFBSSxDQUFBLFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxTQUFTLEtBQUksb0JBQW9CLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQztRQUNqRSxPQUFPLFFBQVEsQ0FBQyxTQUFTLENBQUM7SUFFNUIsTUFBTSxHQUFHLEdBQUcsSUFBQSx5QkFBbUIsRUFBQyxHQUFHLENBQUMsQ0FBQztJQUNyQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUU7UUFDL0IsTUFBTSxPQUFPLEdBQ1gsd0VBQXdFLENBQUM7UUFDM0UsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQzFCO0lBRUQsT0FBTyxlQUFlLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0FBQzNELENBQUM7QUFyQkQsMENBcUJDIn0=
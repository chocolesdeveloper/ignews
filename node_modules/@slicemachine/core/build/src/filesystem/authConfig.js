"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateAuthCookie = exports.setAuthConfig = exports.removeAuthConfig = exports.getOrCreateAuthConfig = exports.createDefaultAuthConfig = exports.DEFAULT_CONFIG = exports.AuthConfig = void 0;
const Either_1 = require("fp-ts/lib/Either");
const t = __importStar(require("io-ts"));
const utils_1 = require("../utils");
const paths_1 = require("./paths");
exports.AuthConfig = t.intersection([
    t.type({
        base: t.string,
        cookies: t.string,
    }),
    t.partial({
        oauthAccessToken: t.string,
        authUrl: t.string,
    }),
]);
exports.DEFAULT_CONFIG = {
    base: "https://prismic.io",
    cookies: "",
};
function createDefaultAuthConfig(directory) {
    const configPath = (0, paths_1.PrismicConfigPath)(directory);
    utils_1.Files.write(configPath, JSON.stringify(exports.DEFAULT_CONFIG, null, "\t"), {
        recursive: false,
    });
    return exports.DEFAULT_CONFIG;
}
exports.createDefaultAuthConfig = createDefaultAuthConfig;
function getOrCreateAuthConfig(directory) {
    const configPath = (0, paths_1.PrismicConfigPath)(directory);
    if (!utils_1.Files.exists(configPath))
        return createDefaultAuthConfig(directory);
    const conf = utils_1.Files.safeReadEntity(configPath, (payload) => {
        return (0, Either_1.getOrElseW)(() => null)(exports.AuthConfig.decode(payload));
    });
    return { ...exports.DEFAULT_CONFIG, ...conf };
}
exports.getOrCreateAuthConfig = getOrCreateAuthConfig;
function removeAuthConfig(directory) {
    const configPath = (0, paths_1.PrismicConfigPath)(directory);
    return utils_1.Files.remove(configPath);
}
exports.removeAuthConfig = removeAuthConfig;
function setAuthConfig(cookies = [], base, directory) {
    const currentConfig = getOrCreateAuthConfig(directory);
    const formattedCookies = utils_1.Cookie.serializeCookies(cookies);
    const configPath = (0, paths_1.PrismicConfigPath)(directory);
    const newConfig = {
        cookies: formattedCookies,
        base: base || currentConfig.base,
    };
    return utils_1.Files.write(configPath, { ...currentConfig, ...newConfig }, { recursive: false });
}
exports.setAuthConfig = setAuthConfig;
function updateAuthCookie(authCookie, directory) {
    const currentConfig = getOrCreateAuthConfig(directory);
    const currentCookieIndexByCookieName = utils_1.Cookie.parse(currentConfig.cookies);
    const newCookies = {
        ...currentCookieIndexByCookieName,
        [utils_1.Cookie.AUTH_KEY]: authCookie,
    };
    const cookiesSerialized = Object.entries(newCookies).map(([cookieName, cookieValue]) => {
        return utils_1.Cookie.serializeCookie(cookieName, cookieValue);
    });
    return setAuthConfig(cookiesSerialized);
}
exports.updateAuthCookie = updateAuthCookie;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aENvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9maWxlc3lzdGVtL2F1dGhDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUE4QztBQUM5Qyx5Q0FBMkI7QUFDM0Isb0NBQXlDO0FBQ3pDLG1DQUE0QztBQUUvQixRQUFBLFVBQVUsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDO0lBQ3ZDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDTCxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU07UUFDZCxPQUFPLEVBQUUsQ0FBQyxDQUFDLE1BQU07S0FDbEIsQ0FBQztJQUNGLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFDUixnQkFBZ0IsRUFBRSxDQUFDLENBQUMsTUFBTTtRQUMxQixPQUFPLEVBQUUsQ0FBQyxDQUFDLE1BQU07S0FDbEIsQ0FBQztDQUNILENBQUMsQ0FBQztBQUdVLFFBQUEsY0FBYyxHQUFlO0lBQ3hDLElBQUksRUFBRSxvQkFBb0I7SUFDMUIsT0FBTyxFQUFFLEVBQUU7Q0FDWixDQUFDO0FBRUYsU0FBZ0IsdUJBQXVCLENBQUMsU0FBa0I7SUFDeEQsTUFBTSxVQUFVLEdBQUcsSUFBQSx5QkFBaUIsRUFBQyxTQUFTLENBQUMsQ0FBQztJQUNoRCxhQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLHNCQUFjLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFO1FBQ2xFLFNBQVMsRUFBRSxLQUFLO0tBQ2pCLENBQUMsQ0FBQztJQUNILE9BQU8sc0JBQWMsQ0FBQztBQUN4QixDQUFDO0FBTkQsMERBTUM7QUFFRCxTQUFnQixxQkFBcUIsQ0FBQyxTQUFrQjtJQUN0RCxNQUFNLFVBQVUsR0FBRyxJQUFBLHlCQUFpQixFQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2hELElBQUksQ0FBQyxhQUFLLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUFFLE9BQU8sdUJBQXVCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFekUsTUFBTSxJQUFJLEdBQUcsYUFBSyxDQUFDLGNBQWMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUN4RCxPQUFPLElBQUEsbUJBQVUsRUFBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxrQkFBVSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzVELENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxFQUFFLEdBQUcsc0JBQWMsRUFBRSxHQUFHLElBQUksRUFBRSxDQUFDO0FBQ3hDLENBQUM7QUFSRCxzREFRQztBQUVELFNBQWdCLGdCQUFnQixDQUFDLFNBQWtCO0lBQ2pELE1BQU0sVUFBVSxHQUFHLElBQUEseUJBQWlCLEVBQUMsU0FBUyxDQUFDLENBQUM7SUFDaEQsT0FBTyxhQUFLLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFIRCw0Q0FHQztBQUVELFNBQWdCLGFBQWEsQ0FDM0IsVUFBaUMsRUFBRSxFQUNuQyxJQUFhLEVBQ2IsU0FBa0I7SUFFbEIsTUFBTSxhQUFhLEdBQUcscUJBQXFCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdkQsTUFBTSxnQkFBZ0IsR0FBRyxjQUFNLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUQsTUFBTSxVQUFVLEdBQUcsSUFBQSx5QkFBaUIsRUFBQyxTQUFTLENBQUMsQ0FBQztJQUVoRCxNQUFNLFNBQVMsR0FBRztRQUNoQixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxJQUFJLElBQUksYUFBYSxDQUFDLElBQUk7S0FDakMsQ0FBQztJQUVGLE9BQU8sYUFBSyxDQUFDLEtBQUssQ0FDaEIsVUFBVSxFQUNWLEVBQUUsR0FBRyxhQUFhLEVBQUUsR0FBRyxTQUFTLEVBQUUsRUFDbEMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLENBQ3JCLENBQUM7QUFDSixDQUFDO0FBbkJELHNDQW1CQztBQUVELFNBQWdCLGdCQUFnQixDQUFDLFVBQWtCLEVBQUUsU0FBa0I7SUFDckUsTUFBTSxhQUFhLEdBQUcscUJBQXFCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdkQsTUFBTSw4QkFBOEIsR0FBRyxjQUFNLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUUzRSxNQUFNLFVBQVUsR0FBRztRQUNqQixHQUFHLDhCQUE4QjtRQUNqQyxDQUFDLGNBQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVO0tBQzlCLENBQUM7SUFFRixNQUFNLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUN0RCxDQUFDLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxFQUFFLEVBQUU7UUFDNUIsT0FBTyxjQUFNLENBQUMsZUFBZSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN6RCxDQUFDLENBQ0YsQ0FBQztJQUVGLE9BQU8sYUFBYSxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDMUMsQ0FBQztBQWhCRCw0Q0FnQkMifQ==
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MocksConfigPath = exports.YarnLockPath = exports.JsonPackagePath = exports.SliceTemplateConfigPath = exports.PrismicConfigPath = exports.LibrariesStatePath = exports.SMConfigPath = exports.PackagePaths = exports.CustomPaths = exports.CustomTypesPaths = exports.GeneratedCustomTypesPaths = exports.GeneratedPaths = void 0;
const path_1 = __importDefault(require("path"));
const os = __importStar(require("os"));
const Paths = (cwd, prefix) => ({
    value: () => path_1.default.join(cwd, prefix),
    customType: (id) => ({
        value: () => path_1.default.join(Paths(cwd, prefix).value()),
        model: () => path_1.default.join(Paths(cwd, prefix).value(), id, "index.json"),
        mock: () => path_1.default.join(Paths(cwd, prefix).value(), id, "mocks.json"),
    }),
    library: (libraryName) => ({
        value: () => path_1.default.join(Paths(cwd, prefix).value(), libraryName),
        slice: (sliceName) => ({
            value: () => path_1.default.join(Paths(cwd, prefix).library(libraryName).value(), sliceName),
            preview: (filename = "preview.png") => path_1.default.join(Paths(cwd, prefix).library(libraryName).slice(sliceName).value(), filename),
            stories: (filename = "index.stories.js") => path_1.default.join(Paths(cwd, prefix).library(libraryName).slice(sliceName).value(), filename),
            mocks: () => path_1.default.join(Paths(cwd, prefix).library(libraryName).slice(sliceName).value(), "mocks.json"),
            model: () => path_1.default.join(Paths(cwd, prefix).library(libraryName).slice(sliceName).value(), "model.json"),
            variation: (variationId) => ({
                value: () => path_1.default.join(Paths(cwd, prefix).library(libraryName).slice(sliceName).value(), variationId),
                preview: (filename = "preview.png") => path_1.default.join(Paths(cwd, prefix)
                    .library(libraryName)
                    .slice(sliceName)
                    .variation(variationId)
                    .value(), filename),
            }),
        }),
    }),
});
const GeneratedPaths = (cwd) => Paths(cwd, path_1.default.join(".slicemachine", "assets"));
exports.GeneratedPaths = GeneratedPaths;
const GeneratedCustomTypesPaths = (cwd) => Paths(cwd, path_1.default.join(".slicemachine", "assets", "customtypes"));
exports.GeneratedCustomTypesPaths = GeneratedCustomTypesPaths;
const CustomTypesPaths = (cwd) => Paths(cwd, "customtypes");
exports.CustomTypesPaths = CustomTypesPaths;
const CustomPaths = (cwd) => Paths(cwd, "");
exports.CustomPaths = CustomPaths;
const PackagePaths = (cwd) => Paths(cwd, "node_modules");
exports.PackagePaths = PackagePaths;
const SMConfigPath = (cwd) => path_1.default.join(cwd, "sm.json");
exports.SMConfigPath = SMConfigPath;
const LibrariesStatePath = (cwd) => path_1.default.join(cwd, ".slicemachine", "libraries-state.json");
exports.LibrariesStatePath = LibrariesStatePath;
exports.PrismicConfigPath = path_1.default.join(os.homedir(), ".prismic");
const SliceTemplateConfigPath = (cwd, customPathToTemplate) => customPathToTemplate
    ? path_1.default.join(cwd, customPathToTemplate)
    : path_1.default.join(cwd, "slice-template");
exports.SliceTemplateConfigPath = SliceTemplateConfigPath;
const JsonPackagePath = (cwd) => path_1.default.join(cwd, "package.json");
exports.JsonPackagePath = JsonPackagePath;
const YarnLockPath = (cwd) => path_1.default.join(cwd, "yarn.lock");
exports.YarnLockPath = YarnLockPath;
const MocksConfigPath = (cwd) => path_1.default.join(cwd, ".slicemachine", "mock-config.json");
exports.MocksConfigPath = MocksConfigPath;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF0aHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZmlsZXN5c3RlbS9wYXRocy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQXdCO0FBQ3hCLHVDQUF5QjtBQThCekIsTUFBTSxLQUFLLEdBQUcsQ0FBQyxHQUFXLEVBQUUsTUFBYyxFQUFTLEVBQUUsQ0FBQyxDQUFDO0lBQ3JELEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxjQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUM7SUFDbkMsVUFBVSxFQUFFLENBQUMsRUFBVSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQzNCLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxjQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDbEQsS0FBSyxFQUFFLEdBQUcsRUFBRSxDQUFDLGNBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsWUFBWSxDQUFDO1FBQ3BFLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQyxjQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLFlBQVksQ0FBQztLQUNwRSxDQUFDO0lBQ0YsT0FBTyxFQUFFLENBQUMsV0FBbUIsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNqQyxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUMsY0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLFdBQVcsQ0FBQztRQUMvRCxLQUFLLEVBQUUsQ0FBQyxTQUFpQixFQUFFLEVBQUUsQ0FBQyxD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
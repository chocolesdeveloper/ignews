"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateManifestSMVersion = exports.patchManifest = exports.maybeRepoNameFromSMFile = exports.retrieveManifest = exports.createManifest = void 0;
const utils_1 = require("../utils");
const paths_1 = require("./paths");
function createManifest(cwd, manifest) {
    const manifestPath = (0, paths_1.SMConfigPath)(cwd);
    utils_1.Files.write(manifestPath, JSON.stringify(manifest, null, "\t"), {
        recursive: false,
    });
}
exports.createManifest = createManifest;
function retrieveManifest(cwd) {
    const manifestPath = (0, paths_1.SMConfigPath)(cwd);
    if (!utils_1.Files.exists(manifestPath)) {
        return {
            exists: false,
            content: null,
        };
    }
    const content = utils_1.Files.safeReadJson(manifestPath);
    return {
        exists: true,
        content,
    };
}
exports.retrieveManifest = retrieveManifest;
function maybeRepoNameFromSMFile(cwd, base) {
    var _a;
    try {
        const baseUrl = new URL(base);
        const maybeSMFile = retrieveManifest(cwd);
        if (maybeSMFile.exists === false)
            return null;
        if (!((_a = maybeSMFile.content) === null || _a === void 0 ? void 0 : _a.apiEndpoint))
            return null;
        const repoUrl = new URL(maybeSMFile.content.apiEndpoint);
        const correctBase = repoUrl.hostname.includes(baseUrl.hostname);
        if (correctBase === false)
            return null;
        return repoUrl.hostname.split(".")[0];
    }
    catch {
        return null;
    }
}
exports.maybeRepoNameFromSMFile = maybeRepoNameFromSMFile;
function patchManifest(cwd, data) {
    const manifest = retrieveManifest(cwd);
    if (!manifest.exists || !manifest.content)
        return false;
    const updatedManifest = {
        ...manifest.content,
        ...data,
    };
    utils_1.Files.write((0, paths_1.SMConfigPath)(cwd), updatedManifest);
    return true;
}
exports.patchManifest = patchManifest;
function updateManifestSMVersion(cwd, version) {
    var _a;
    const manifest = retrieveManifest(cwd);
    if ((_a = manifest.content) === null || _a === void 0 ? void 0 : _a._latest)
        return false;
    return patchManifest(cwd, { _latest: version });
}
exports.updateManifestSMVersion = updateManifestSMVersion;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuaWZlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZmlsZXN5c3RlbS9tYW5pZmVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvQ0FBaUM7QUFDakMsbUNBQW9EO0FBR3BELFNBQWdCLGNBQWMsQ0FBQyxHQUFXLEVBQUUsUUFBa0I7SUFDNUQsTUFBTSxZQUFZLEdBQUcsSUFBQSxvQkFBWSxFQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZDLGFBQUssQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRTtRQUM5RCxTQUFTLEVBQUUsS0FBSztLQUNqQixDQUFDLENBQUM7QUFDTCxDQUFDO0FBTEQsd0NBS0M7QUFFRCxTQUFnQixnQkFBZ0IsQ0FBQyxHQUFXO0lBQzFDLE1BQU0sWUFBWSxHQUFHLElBQUEsb0JBQVksRUFBQyxHQUFHLENBQUMsQ0FBQztJQUV2QyxJQUFJLENBQUMsYUFBSyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsRUFBRTtRQUMvQixPQUFPO1lBQ0wsTUFBTSxFQUFFLEtBQUs7WUFDYixPQUFPLEVBQUUsSUFBSTtTQUNkLENBQUM7S0FDSDtJQUVELE1BQU0sT0FBTyxHQUFvQixhQUFLLENBQUMsWUFBWSxDQUNqRCxZQUFZLENBQ00sQ0FBQztJQUNyQixPQUFPO1FBQ0wsTUFBTSxFQUFFLElBQUk7UUFDWixPQUFPO0tBQ1IsQ0FBQztBQUNKLENBQUM7QUFqQkQsNENBaUJDO0FBRUQsU0FBZ0IsdUJBQXVCLENBQ3JDLEdBQVcsRUFDWCxJQUFZOztJQUVaLElBQUk7UUFDRixNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixNQUFNLFdBQVcsR0FBRyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUUxQyxJQUFJLFdBQVcsQ0FBQyxNQUFNLEtBQUssS0FBSztZQUFFLE9BQU8sSUFBSSxDQUFDO1FBQzlDLElBQUksQ0FBQyxDQUFBLE1BQUEsV0FBVyxDQUFDLE9BQU8sMENBQUUsV0FBVyxDQUFBO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFFbkQsTUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN6RCxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDaEUsSUFBSSxXQUFXLEtBQUssS0FBSztZQUFFLE9BQU8sSUFBSSxDQUFDO1FBRXZDLE9BQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDdkM7SUFBQyxNQUFNO1FBQ04sT0FBTyxJQUFJLENBQUM7S0FDYjtBQUNILENBQUM7QUFuQkQsMERBbUJDO0FBRUQsU0FBZ0IsYUFBYSxDQUFDLEdBQVcsRUFBRSxJQUF1QjtJQUNoRSxNQUFNLFFBQVEsR0FBMEIsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTztRQUFFLE9BQU8sS0FBSyxDQUFDO0lBRXhELE1BQU0sZUFBZSxHQUFHO1FBQ3RCLEdBQUcsUUFBUSxDQUFDLE9BQU87UUFDbkIsR0FBRyxJQUFJO0tBQ1IsQ0FBQztJQUVGLGFBQUssQ0FBQyxLQUFLLENBQUMsSUFBQSxvQkFBWSxFQUFDLEdBQUcsQ0FBQyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ2hELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQVhELHNDQVdDO0FBRUQsU0FBZ0IsdUJBQXVCLENBQUMsR0FBVyxFQUFFLE9BQWU7O0lBQ2xFLE1BQU0sUUFBUSxHQUEwQixnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5RCxJQUFJLE1BQUEsUUFBUSxDQUFDLE9BQU8sMENBQUUsT0FBTztRQUFFLE9BQU8sS0FBSyxDQUFDO0lBRTVDLE9BQU8sYUFBYSxDQUFDLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFMRCwwREFLQyJ9
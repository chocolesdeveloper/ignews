"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.libraries = exports.handleLibraryPath = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const files_1 = __importDefault(require("../utils/files"));
const lib_1 = require("../utils/lib");
const component_1 = require("./component");
const Library_1 = require("../models/Library");
function handleLibraryPath(cwd, libPath) {
    const { from, isLocal, pathExists, pathToSlices, pathToLib } = (0, lib_1.getInfoFromPath)(cwd, libPath);
    if (!pathExists) {
        return;
    }
    const pathsToComponents = files_1.default.readDirectory(pathToSlices.split(path_1.default.sep).join(path_1.default.posix.sep))
        .map((curr) => path_1.default.join(pathToSlices, curr))
        .filter((e) => {
        const f = e.split(path_1.default.sep).pop();
        return fs_1.default.lstatSync(e).isDirectory() && !(f === null || f === void 0 ? void 0 : f.startsWith("."));
    });
    const pathToSlice = `${isLocal ? "./" : ""}${from}${pathToSlices
        .split(from)
        .slice(1)
        .join("")}`;
    const allComponents = pathsToComponents.reduce((acc, curr) => {
        const componentInfo = (0, component_1.getComponentInfo)(curr, [cwd, path_1.default.join(cwd, ".slicemachine/assets")], from);
        if (!componentInfo) {
            return acc;
        }
        const { model } = componentInfo;
        return [
            ...acc,
            {
                from,
                href: from.replace(/\//g, "--"),
                pathToSlice,
                infos: componentInfo,
                model,
                migrated: false,
            },
        ];
    }, []);
    const meta = Library_1.LibraryMeta.build(pathToLib);
    return {
        path: pathToLib,
        isLocal,
        name: from,
        components: allComponents,
        meta,
    };
}
exports.handleLibraryPath = handleLibraryPath;
function libraries(cwd, libraries) {
    return (libraries || [])
        .map((lib) => handleLibraryPath(cwd, lib))
        .filter(Boolean);
}
exports.libraries = libraries;
__exportStar(require("./screenshot"), exports);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGlicmFyaWVzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw0Q0FBb0I7QUFDcEIsZ0RBQXdCO0FBRXhCLDJEQUFtQztBQUNuQyxzQ0FBK0M7QUFDL0MsMkNBQStDO0FBQy9DLCtDQUFvRTtBQUVwRSxTQUFnQixpQkFBaUIsQ0FDL0IsR0FBVyxFQUNYLE9BQWU7SUFFZixNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxHQUMxRCxJQUFBLHFCQUFlLEVBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRWhDLElBQUksQ0FBQyxVQUFVLEVBQUU7UUFDZixPQUFPO0tBQ1I7SUFHRCxNQUFNLGlCQUFpQixHQUFHLGVBQUssQ0FBQyxhQUFhLENBQzNDLFlBQVksQ0FBQyxLQUFLLENBQUMsY0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUNsRDtTQUNFLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsY0FBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDNUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7UUFDWixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLGNBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNsQyxPQUFPLFlBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFBLENBQUMsYUFBRCxDQUFDLHVCQUFELENBQUMsQ0FBRSxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUEsQ0FBQztJQUM5RCxDQUFDLENBQUMsQ0FBQztJQUdMLE1BQU0sV0FBVyxHQUFHLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxJQUFJLEdBQUcsWUFBWTtTQUM3RCxLQUFLLENBQUMsSUFBSSxDQUFDO1NBQ1gsS0FBSyxDQUFDLENBQUMsQ0FBQztTQUNSLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO0lBRWQsTUFBTSxhQUFhLEdBQWdCLGlCQUFpQixDQUFDLE1BQU0sQ0FDekQsQ0FBQyxHQUFnQixFQUFFLElBQVksRUFBRSxFQUFFO1FBQ2pDLE1BQU0sYUFBYSxHQUFHLElBQUEsNEJBQWdCLEVBQ3BDLElBQUksRUFDSixDQUFDLEdBQUcsRUFBRSxjQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDLEVBQzdDLElBQUksQ0FDTCxDQUFDO1FBQ0YsSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUNsQixPQUFPLEdBQUcsQ0FBQztTQUNaO1FBQ0QsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLGFBQWEsQ0FBQztRQUNoQyxPQUFPO1lBQ0wsR0FBRyxHQUFHO1lBQ047Z0JBQ0UsSUFBSTtnQkFDSixJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDO2dCQUMvQixXQUFXO2dCQUNYLEtBQUssRUFBRSxhQUFhO2dCQUNwQixLQUFLO2dCQUNMLFFBQVEsRUFBRSxLQUFLO2FBQ2hCO1NBQ0YsQ0FBQztJQUNKLENBQUMsRUFDRCxFQUFFLENBQ0gsQ0FBQztJQUVGLE1BQU0sSUFBSSxHQUFHLHFCQUFXLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBRTFDLE9BQU87UUFDTCxJQUFJLEVBQUUsU0FBUztRQUNmLE9BQU87UUFDUCxJQUFJLEVBQUUsSUFBSTtRQUNWLFVBQVUsRUFBRSxhQUFhO1FBQ3pCLElBQUk7S0FDTCxDQUFDO0FBQ0osQ0FBQztBQTlERCw4Q0E4REM7QUFFRCxTQUFnQixTQUFTLENBQ3ZCLEdBQVcsRUFDWCxTQUFnQztJQUVoQyxPQUFPLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztTQUNyQixHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztTQUN6QyxNQUFNLENBQUMsT0FBTyxDQUFzQyxDQUFDO0FBQzFELENBQUM7QUFQRCw4QkFPQztBQUVELCtDQUE2QiJ9
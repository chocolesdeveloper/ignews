"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolvePathsToScreenshot = exports.generatePathsToScreenshot = exports.createPathToScreenshot = exports.Extensions = void 0;
const path_1 = __importDefault(require("path"));
const files_1 = __importDefault(require("../utils/files"));
var Extensions;
(function (Extensions) {
    Extensions["jpeg"] = "jpeg";
    Extensions["jpg"] = "jpg";
    Extensions["png"] = "png";
})(Extensions = exports.Extensions || (exports.Extensions = {}));
function createPathToScreenshot({ path: filePath, from, sliceName, variationId, extension, }) {
    return path_1.default.join(filePath, from, sliceName, variationId, `preview.${extension}`);
}
exports.createPathToScreenshot = createPathToScreenshot;
function generatePathsToScreenshot({ base, from, sliceName, variationId, }) {
    return Object.values(Extensions).map((imageType) => {
        return path_1.default.join(base, from, sliceName, variationId, `preview.${imageType}`);
    });
}
exports.generatePathsToScreenshot = generatePathsToScreenshot;
function resolvePathsToScreenshot({ paths, from, sliceName, variationId, }) {
    const possiblePaths = paths
        .map((base) => generatePathsToScreenshot({
        base,
        from,
        sliceName,
        variationId,
    }))
        .flat();
    const screenshot = files_1.default.readFirstOf(possiblePaths)((v) => v);
    if (!screenshot)
        return screenshot;
    return {
        path: screenshot.path,
    };
}
exports.resolvePathsToScreenshot = resolvePathsToScreenshot;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyZWVuc2hvdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWJyYXJpZXMvc2NyZWVuc2hvdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxnREFBd0I7QUFDeEIsMkRBQW1DO0FBRW5DLElBQVksVUFJWDtBQUpELFdBQVksVUFBVTtJQUNwQiwyQkFBYSxDQUFBO0lBQ2IseUJBQVcsQ0FBQTtJQUNYLHlCQUFXLENBQUE7QUFDYixDQUFDLEVBSlcsVUFBVSxHQUFWLGtCQUFVLEtBQVYsa0JBQVUsUUFJckI7QUFFRCxTQUFnQixzQkFBc0IsQ0FBQyxFQUNyQyxJQUFJLEVBQUUsUUFBUSxFQUNkLElBQUksRUFDSixTQUFTLEVBQ1QsV0FBVyxFQUNYLFNBQVMsR0FPVjtJQUNDLE9BQU8sY0FBSSxDQUFDLElBQUksQ0FDZCxRQUFRLEVBQ1IsSUFBSSxFQUNKLFNBQVMsRUFDVCxXQUFXLEVBQ1gsV0FBVyxTQUFTLEVBQUUsQ0FDdkIsQ0FBQztBQUNKLENBQUM7QUFwQkQsd0RBb0JDO0FBRUQsU0FBZ0IseUJBQXlCLENBQUMsRUFDeEMsSUFBSSxFQUNKLElBQUksRUFDSixTQUFTLEVBQ1QsV0FBVyxHQU1aO0lBQ0MsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQWlCLEVBQUUsRUFBRTtRQUN6RCxPQUFPLGNBQUksQ0FBQyxJQUFJLENBQ2QsSUFBSSxFQUNKLElBQUksRUFDSixTQUFTLEVBQ1QsV0FBVyxFQUNYLFdBQVcsU0FBUyxFQUFFLENBQ3ZCLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFwQkQsOERBb0JDO0FBRUQsU0FBZ0Isd0JBQXdCLENBQUMsRUFDdkMsS0FBSyxFQUNMLElBQUksRUFDSixTQUFTLEVBQ1QsV0FBVyxHQU1aO0lBQ0MsTUFBTSxhQUFhLEdBQUcsS0FBSztTQUN4QixHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUNaLHlCQUF5QixDQUFDO1FBQ3hCLElBQUk7UUFDSixJQUFJO1FBQ0osU0FBUztRQUNULFdBQVc7S0FDWixDQUFDLENBQ0g7U0FDQSxJQUFJLEVBQUUsQ0FBQztJQUVWLE1BQU0sVUFBVSxHQUFHLGVBQUssQ0FBQyxXQUFXLENBQVMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTlFLElBQUksQ0FBQyxVQUFVO1FBQUUsT0FBTyxVQUFVLENBQUM7SUFFbkMsT0FBTztRQUNMLElBQUksRUFBRSxVQUFVLENBQUMsSUFBSTtLQUN0QixDQUFDO0FBQ0osQ0FBQztBQTdCRCw0REE2QkMifQ==
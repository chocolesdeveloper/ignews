"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Libraries = exports.Library = exports.Component = exports.ComponentMeta = exports.ComponentMocks = void 0;
const t = __importStar(require("io-ts"));
const Slice_1 = require("./Slice");
const Variation_1 = require("./Variation");
exports.ComponentMocks = t.record(t.string, Variation_1.VariationMock);
exports.ComponentMeta = t.type({
    fileName: t.union([t.string, t.null]),
    isDirectory: t.boolean,
    extension: t.union([t.string, t.null]),
});
const ComponentScreenshots = t.record(t.string, t.type({
    path: t.union([t.string, t.undefined]),
    width: t.union([t.number, t.undefined]),
    height: t.union([t.number, t.undefined]),
}));
exports.Component = t.intersection([
    t.type({
        id: t.string,
        library: t.string,
        model: Slice_1.SliceAsObject,
        mocks: exports.ComponentMocks,
        meta: exports.ComponentMeta,
    }),
    t.partial({
        screenshotPaths: ComponentScreenshots,
        name: t.string,
        description: t.string,
    }),
]);
exports.Library = t.type({
    name: t.union([t.string, t.undefined]),
    version: t.union([t.string, t.undefined]),
    components: t.record(t.string, exports.Component),
});
exports.Libraries = t.record(t.string, exports.Library);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlicmFyaWVzU3RhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbW9kZWxzL0xpYnJhcmllc1N0YXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5Q0FBMkI7QUFDM0IsbUNBQXdDO0FBQ3hDLDJDQUE0QztBQUUvQixRQUFBLGNBQWMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUseUJBQWEsQ0FBQyxDQUFDO0FBR25ELFFBQUEsYUFBYSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDbEMsUUFBUSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLE9BQU87SUFDdEIsU0FBUyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztDQUN2QyxDQUFDLENBQUM7QUFHSCxNQUFNLG9CQUFvQixHQUFHLENBQUMsQ0FBQyxNQUFNLENBQ25DLENBQUMsQ0FBQyxNQUFNLEVBQ1IsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNMLElBQUksRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0NBQ3pDLENBQUMsQ0FDSCxDQUFDO0FBSVcsUUFBQSxTQUFTLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztJQUN0QyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUMsQ0FBQyxNQUFNO1FBQ1osT0FBTyxFQUFFLENBQUMsQ0FBQyxNQUFNO1FBQ2pCLEtBQUssRUFBRSxxQkFBYTtRQUNwQixLQUFLLEVBQUUsc0JBQWM7UUFDckIsSUFBSSxFQUFFLHFCQUFhO0tBQ3BCLENBQUM7SUFDRixDQUFDLENBQUMsT0FBTyxDQUFDO1FBQ1IsZUFBZSxFQUFFLG9CQUFvQjtRQUNyQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU07UUFDZCxXQUFXLEVBQUUsQ0FBQyxDQUFDLE1BQU07S0FDdEIsQ0FBQztDQUNILENBQUMsQ0FBQztBQUlVLFFBQUEsT0FBTyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDNUIsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN0QyxPQUFPLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3pDLFVBQVUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsaUJBQVMsQ0FBQztDQUMxQyxDQUFDLENBQUM7QUFJVSxRQUFBLFNBQVMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsZUFBTyxDQUFDLENBQUMifQ==
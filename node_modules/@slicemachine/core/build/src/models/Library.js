"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LibraryMeta = exports.ComponentInfo = void 0;
const t = __importStar(require("io-ts"));
const Either_1 = require("fp-ts/lib/Either");
const path_1 = __importDefault(require("path"));
const files_1 = __importDefault(require("../utils/files"));
exports.ComponentInfo = {
    hasPreviewsMissing(info) {
        const { screenshotPaths, model } = info;
        if (!screenshotPaths)
            return true;
        return model.variations
            .map((v) => v.id)
            .some((variationId) => !screenshotPaths[variationId]);
    },
};
exports.LibraryMeta = {
    reader: t.exact(t.partial({
        name: t.string,
        version: t.string,
    })),
    build(libPath) {
        const meta = files_1.default.safeReadEntity(path_1.default.join(libPath, "meta.json"), (payload) => {
            return (0, Either_1.getOrElseW)(() => null)(exports.LibraryMeta.reader.decode(payload));
        });
        if (!meta)
            return;
        return {
            name: meta.name,
            version: meta.version,
        };
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlicmFyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RlbHMvTGlicmFyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEseUNBQTJCO0FBQzNCLDZDQUE4QztBQUM5QyxnREFBd0I7QUFDeEIsMkRBQW1DO0FBc0J0QixRQUFBLGFBQWEsR0FBRztJQUMzQixrQkFBa0IsQ0FBQyxJQUFtQjtRQUNwQyxNQUFNLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxHQUFHLElBQUksQ0FBQztRQUN4QyxJQUFJLENBQUMsZUFBZTtZQUFFLE9BQU8sSUFBSSxDQUFDO1FBQ2xDLE9BQU8sS0FBSyxDQUFDLFVBQVU7YUFDcEIsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2FBQ2hCLElBQUksQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztJQUMxRCxDQUFDO0NBQ0YsQ0FBQztBQXFCVyxRQUFBLFdBQVcsR0FBRztJQUN6QixNQUFNLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FDYixDQUFDLENBQUMsT0FBTyxDQUFDO1FBQ1IsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNO1FBQ2QsT0FBTyxFQUFFLENBQUMsQ0FBQyxNQUFNO0tBQ2xCLENBQUMsQ0FDSDtJQUNELEtBQUssQ0FBQyxPQUFlO1FBQ25CLE1BQU0sSUFBSSxHQUFHLGVBQUssQ0FBQyxjQUFjLENBQy9CLGNBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxFQUMvQixDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ1YsT0FBTyxJQUFBLG1CQUFVLEVBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsbUJBQVcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDcEUsQ0FBQyxDQUNGLENBQUM7UUFDRixJQUFJLENBQUMsSUFBSTtZQUFFLE9BQU87UUFFbEIsT0FBTztZQUNMLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtZQUNmLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztTQUN0QixDQUFDO0lBQ0osQ0FBQztDQUNGLENBQUMifQ==
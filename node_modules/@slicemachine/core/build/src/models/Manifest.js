"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManifestHelper = exports.Manifest = void 0;
const t = __importStar(require("io-ts"));
const Framework_1 = require("./Framework");
class ApiEndPointType extends t.Type {
    constructor() {
        super("apiEndpoint", (input) => typeof input === "string", (input, context) => {
            if (typeof input !== "string")
                return t.failure(input, context);
            const regx = new RegExp("^https?://[a-z0-9][a-z0-9-]{2,}[a-z0-9](.cdn)?.(prismic.io|wroom.io|wroom.test)/api/v2/?$", "gi");
            const result = regx.test(input);
            return result
                ? t.success(input)
                : t.failure(input, context, `apiEndpoint should match ${regx.source}`);
        }, t.identity);
    }
}
const apiEndpoint = new ApiEndPointType();
exports.Manifest = t.intersection([
    t.type({
        apiEndpoint,
    }),
    t.partial({
        storybook: t.string,
        localSliceSimulatorURL: t.string,
        libraries: t.array(t.string),
        framework: Framework_1.FrameworksC,
        chromaticAppId: t.string,
        _latest: t.string,
        tracking: t.boolean,
    }),
]);
exports.ManifestHelper = {
    localLibraries(manifest) {
        return (manifest.libraries || [])
            .filter((l) => l.startsWith("~/") || l.startsWith("@/"))
            .map((lib) => {
            const prefix = lib.indexOf("~") != -1 ? `~` : `@`;
            return {
                prefix,
                path: lib.replace(`${prefix}/`, ""),
                fullPath: lib,
            };
        });
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFuaWZlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbW9kZWxzL01hbmlmZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5Q0FBMkI7QUFDM0IsMkNBQTBDO0FBRTFDLE1BQU0sZUFBZ0IsU0FBUSxDQUFDLENBQUMsSUFBWTtJQUMxQztRQUNFLEtBQUssQ0FDSCxhQUFhLEVBQ2IsQ0FBQyxLQUFjLEVBQW1CLEVBQUUsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQzlELENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxFQUFFO1lBQ2pCLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUTtnQkFBRSxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQ2hFLE1BQU0sSUFBSSxHQUFHLElBQUksTUFBTSxDQUNyQiwyRkFBMkYsRUFDM0YsSUFBSSxDQUNMLENBQUM7WUFDRixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2hDLE9BQU8sTUFBTTtnQkFDWCxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7Z0JBQ2xCLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUNQLEtBQUssRUFDTCxPQUFPLEVBQ1AsNEJBQTRCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FDMUMsQ0FBQztRQUNSLENBQUMsRUFDRCxDQUFDLENBQUMsUUFBUSxDQUNYLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUFFRCxNQUFNLFdBQVcsR0FBRyxJQUFJLGVBQWUsRUFBRSxDQUFDO0FBRTdCLFFBQUEsUUFBUSxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7SUFDckMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNMLFdBQVc7S0FDWixDQUFDO0lBQ0YsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUNSLFNBQVMsRUFBRSxDQUFDLENBQUMsTUFBTTtRQUNuQixzQkFBc0IsRUFBRSxDQUFDLENBQUMsTUFBTTtRQUNoQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQzVCLFNBQVMsRUFBRSx1QkFBVztRQUN0QixjQUFjLEVBQUUsQ0FBQyxDQUFDLE1BQU07UUFDeEIsT0FBTyxFQUFFLENBQUMsQ0FBQyxNQUFNO1FBQ2pCLFFBQVEsRUFBRSxDQUFDLENBQUMsT0FBTztLQUNwQixDQUFDO0NBQ0gsQ0FBQyxDQUFDO0FBSVUsUUFBQSxjQUFjLEdBQUc7SUFDNUIsY0FBYyxDQUNaLFFBQWtCO1FBRWxCLE9BQU8sQ0FBQyxRQUFRLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQzthQUM5QixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN2RCxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNYLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO1lBQ2xELE9BQU87Z0JBQ0wsTUFBTTtnQkFDTixJQUFJLEVBQUUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLE1BQU0sR0FBRyxFQUFFLEVBQUUsQ0FBQztnQkFDbkMsUUFBUSxFQUFFLEdBQUc7YUFDZCxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0NBQ0YsQ0FBQyJ9
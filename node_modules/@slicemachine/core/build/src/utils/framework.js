"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defineFramework = exports.detectFramework = exports.fancyName = exports.isFrameworkSupported = exports.UnsupportedFrameWorks = exports.Frameworks = void 0;
const filesystem_1 = require("../filesystem");
const Framework_1 = require("../models/Framework");
var Framework_2 = require("../models/Framework");
Object.defineProperty(exports, "Frameworks", { enumerable: true, get: function () { return Framework_2.Frameworks; } });
exports.UnsupportedFrameWorks = Object.values(Framework_1.Frameworks).filter((framework) => !Framework_1.SupportedFrameworks.includes(framework));
function isFrameworkSupported(framework) {
    return Framework_1.SupportedFrameworks.includes(framework);
}
exports.isFrameworkSupported = isFrameworkSupported;
function capitaliseFirstLetter(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
}
function fancyName(str) {
    switch (str) {
        case Framework_1.Frameworks.next:
            return "Next.js";
        default:
            return capitaliseFirstLetter(str);
    }
}
exports.fancyName = fancyName;
function detectFramework(pkg, supportedFrameworks = Framework_1.SupportedFrameworks) {
    const { dependencies, devDependencies, peerDependencies } = pkg;
    const deps = { ...peerDependencies, ...devDependencies, ...dependencies };
    const frameworkEntry = Object.values(supportedFrameworks).find((f) => deps[f] && deps[f].length);
    return frameworkEntry || Framework_1.Frameworks.vanillajs;
}
exports.detectFramework = detectFramework;
function defineFramework({ cwd, supportedFrameworks = Framework_1.SupportedFrameworks, manifest, }) {
    if ((manifest === null || manifest === void 0 ? void 0 : manifest.framework) && isFrameworkSupported(manifest.framework))
        return manifest.framework;
    const pkg = (0, filesystem_1.retrieveJsonPackage)(cwd);
    if (!pkg.exists || !pkg.content) {
        const message = "[api/env]: Unrecoverable error. Could not find package.json. Exiting..";
        console.error(message);
        throw new Error(message);
    }
    return detectFramework(pkg.content, supportedFrameworks);
}
exports.defineFramework = defineFramework;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJhbWV3b3JrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2ZyYW1ld29yay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBaUU7QUFDakUsbURBQXNFO0FBR3RFLGlEQUFpRDtBQUF4Qyx1R0FBQSxVQUFVLE9BQUE7QUFFTixRQUFBLHFCQUFxQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsc0JBQVUsQ0FBQyxDQUFDLE1BQU0sQ0FDbkUsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsK0JBQW1CLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUN4RCxDQUFDO0FBRUYsU0FBZ0Isb0JBQW9CLENBQUMsU0FBcUI7SUFDeEQsT0FBTywrQkFBbUIsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDakQsQ0FBQztBQUZELG9EQUVDO0FBRUQsU0FBUyxxQkFBcUIsQ0FBQyxHQUFXO0lBQ3hDLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BELENBQUM7QUFFRCxTQUFnQixTQUFTLENBQUMsR0FBZTtJQUN2QyxRQUFRLEdBQUcsRUFBRTtRQUNYLEtBQUssc0JBQVUsQ0FBQyxJQUFJO1lBQ2xCLE9BQU8sU0FBUyxDQUFDO1FBQ25CO1lBQ0UsT0FBTyxxQkFBcUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNyQztBQUNILENBQUM7QUFQRCw4QkFPQztBQUVELFNBQWdCLGVBQWUsQ0FDN0IsR0FBZ0IsRUFDaEIsc0JBQW9DLCtCQUFtQjtJQUV2RCxNQUFNLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxHQUFHLEdBQUcsQ0FBQztJQUNoRSxNQUFNLElBQUksR0FBRyxFQUFFLEdBQUcsZ0JBQWdCLEVBQUUsR0FBRyxlQUFlLEVBQUUsR0FBRyxZQUFZLEVBQUUsQ0FBQztJQUUxRSxNQUFNLGNBQWMsR0FBMkIsTUFBTSxDQUFDLE1BQU0sQ0FDMUQsbUJBQW1CLENBQ3BCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3pDLE9BQU8sY0FBYyxJQUFJLHNCQUFVLENBQUMsU0FBUyxDQUFDO0FBQ2hELENBQUM7QUFYRCwwQ0FXQztBQUVELFNBQWdCLGVBQWUsQ0FBQyxFQUM5QixHQUFHLEVBQ0gsbUJBQW1CLEdBQUcsK0JBQW1CLEVBQ3pDLFFBQVEsR0FLVDtJQUNDLElBQUksQ0FBQSxRQUFRLGFBQVIsUUFBUSx1QkFBUixRQUFRLENBQUUsU0FBUyxLQUFJLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUM7UUFDakUsT0FBTyxRQUFRLENBQUMsU0FBUyxDQUFDO0lBRTVCLE1BQU0sR0FBRyxHQUFHLElBQUEsZ0NBQW1CLEVBQUMsR0FBRyxDQUFDLENBQUM7SUFDckMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFO1FBQy9CLE1BQU0sT0FBTyxHQUNYLHdFQUF3RSxDQUFDO1FBQzNFLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkIsTUFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUMxQjtJQUVELE9BQU8sZUFBZSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztBQUMzRCxDQUFDO0FBckJELDBDQXFCQyJ9
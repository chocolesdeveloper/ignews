import { EmptyContentType } from "./EmptyContent"
import { GroupContentType } from "./GroupContent"
import { NestableTypes } from "./nestable"
import { SlicesContent, SlicesContentType } from "./slices/SlicesContent"
import StaticWidgetContent from "./StaticWidgetContent"
import { UIDContentType } from "./UIDContent"

export * from "./EmptyContent"
export * from "./GroupContent"
export * as Nestable from "./nestable"
export * from "./SimpleWidgetContent"
export * as Slices from "./slices"
export {
	type NonEmptyStaticWidgetContent,
	default as StaticWidgetContent,
} from "./StaticWidgetContent"
export * from "./UIDContent"

export const WidgetTypes = {
	...NestableTypes,
	Empty: EmptyContentType,
	UID: UIDContentType,
	Group: GroupContentType,
	slices: SlicesContentType,
} as const

export type WidgetKey = string
export type WidgetContent = SlicesContent | StaticWidgetContent

export const Widget = {
	fromJson(
		widgetKey: WidgetKey,
		widgetValue: unknown,
		widgetTypes: Map<WidgetKey, string>,
		widgetPositions: Map<WidgetKey, number>,
	) {
		const fieldType = widgetTypes.get(widgetKey)

		if (fieldType === "Slices") {
			return SlicesContent.fromJson(
				widgetKey,
				widgetValue,
				widgetTypes,
				widgetPositions,
			)
		} else {
			return StaticWidgetContent.fromJson(
				[],
				widgetKey,
				widgetValue,
				widgetTypes,
				widgetPositions,
			)
		}
	},
}

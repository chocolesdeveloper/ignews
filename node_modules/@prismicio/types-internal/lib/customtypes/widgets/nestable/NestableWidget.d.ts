import * as t from "io-ts";
declare const NestableWidget: t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Color>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.BooleanField>;
}>, t.PartialC<{
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        default_value: t.BooleanC;
        placeholder_true: t.StringC;
        placeholder_false: t.StringC;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Embed>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        useAsTitle: t.BooleanC;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.GeoPoint>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Date>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        default: t.StringC;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Number>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Range>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        min: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
        max: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
        step: t.UnionC<[t.NumberC, import("io-ts-types").NumberFromStringC]>;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.RichText>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        useAsTitle: t.BooleanC;
        single: t.Type<string, string, unknown>;
        multi: t.Type<string, string, unknown>;
        imageConstraint: t.PartialC<{
            width: t.Type<number | null, unknown, unknown>;
            height: t.Type<number | null, unknown, unknown>;
        }>;
        labels: t.Type<string[], object, unknown>;
        allowTargetBlank: t.BooleanC;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Select>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        default_value: t.StringC;
        options: t.ArrayC<t.UnionC<[t.StringC, t.Type<string, string, unknown>, t.Type<string, string, unknown>]>>;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Separator>;
}>, t.PartialC<{
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Text>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        useAsTitle: t.BooleanC;
        placeholder: t.StringC;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Timestamp>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        default: t.StringC;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Link>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        useAsTitle: t.BooleanC;
        placeholder: t.StringC;
        select: t.UnionC<[t.LiteralC<"media">, t.LiteralC<"document">, t.LiteralC<"web">, t.NullC]>;
        customtypes: t.ArrayC<t.StringC>;
        masks: t.Type<string[], object, unknown>;
        tags: t.Type<string[], object, unknown>;
        allowTargetBlank: t.BooleanC;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.Image>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        constraint: t.PartialC<{
            width: t.Type<number | null, unknown, unknown>;
            height: t.Type<number | null, unknown, unknown>;
        }>;
        thumbnails: t.ArrayC<t.ExactC<t.IntersectionC<[t.TypeC<{
            name: t.StringC;
        }>, t.PartialC<{
            width: t.Type<number | null, unknown, unknown>;
            height: t.Type<number | null, unknown, unknown>;
        }>]>>>;
    }>>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<import("../WidgetTypes").default.IntegrationField>;
}>, t.PartialC<{
    fieldset: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    config: t.ExactC<t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        placeholder: t.StringC;
        catalog: t.StringC;
    }>>;
}>]>>]>;
declare type NestableWidget = t.TypeOf<typeof NestableWidget>;
export default NestableWidget;

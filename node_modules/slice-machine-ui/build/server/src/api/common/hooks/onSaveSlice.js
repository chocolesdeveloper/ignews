"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const core_1 = require("@slicemachine/core");
const files_1 = __importDefault(require("@lib/utils/files"));
const lib_1 = require("@lib/utils/lib");
const LibrariesState = __importStar(require("../LibrariesState"));
const Libraries = __importStar(require("@slicemachine/core/build/libraries"));
const customComment = `// This file is generated by Slice Machine. Update with care!\n`;
const createIndexFile = (lib) => {
    const { imports, exportList, componentsProperties } = lib.components.reduce((acc, component) => {
        const imports = acc.imports +
            `import ${component.model.name} from './${component.model.name}';\n`;
        const exportList = acc.exportList + `\t${component.model.name},\n`;
        const componentsProperties = acc.componentsProperties +
            `\t${component.model.id}: ${component.model.name},\n`;
        return { imports, exportList, componentsProperties };
    }, { imports: "", exportList: "", componentsProperties: "" });
    const exports = `export {\n${exportList}};\n`;
    const components = `export const components = {\n${componentsProperties}};\n`;
    return [customComment, imports, exports, components].join("\n");
};
const createIndexFileForSvelte = (lib) => {
    let f = `// This file is generated by Slice Machine. Update with care!\n\n`;
    f += "const Slices = {}\n";
    f += "export default Slices\n\n";
    for (const c of lib.components) {
        f += `import ${c.model.name} from './${c.model.name}/index.svelte'\n`;
        f += `Slices.${c.model.name} = ${c.model.name}\n`;
    }
    return f;
};
const createIndexFileForFrameWork = (env, lib) => {
    if (env.framework === core_1.Models.Frameworks.svelte)
        return createIndexFileForSvelte(lib);
    return createIndexFile(lib);
};
async function onSaveSlice(env) {
    const libraries = await Libraries.libraries(env.cwd, env.manifest.libraries || []);
    const localLibs = libraries.filter((e) => e.isLocal);
    for (const lib of localLibs) {
        if (lib.components.length) {
            const { pathToSlice: relativePathToLib } = lib.components[0];
            const file = createIndexFileForFrameWork(env, lib);
            const pathToLib = path_1.default.join(env.cwd, relativePathToLib);
            const indexFilePath = lib_1.findIndexFile(pathToLib) || path_1.default.join(pathToLib, "index.js");
            files_1.default.write(indexFilePath, file);
        }
    }
    LibrariesState.generateState(env);
}
exports.default = onSaveSlice;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib25TYXZlU2xpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zZXJ2ZXIvc3JjL2FwaS9jb21tb24vaG9va3Mvb25TYXZlU2xpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQXdCO0FBQ3hCLDZDQUE0QztBQUM1Qyw2REFBcUM7QUFDckMsd0NBQStDO0FBRy9DLGtFQUFvRDtBQUNwRCw4RUFBZ0U7QUFFaEUsTUFBTSxhQUFhLEdBQUcsaUVBQWlFLENBQUM7QUFFeEYsTUFBTSxlQUFlLEdBQUcsQ0FBQyxHQUFxQyxFQUFFLEVBQUU7SUFDaEUsTUFBTSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsb0JBQW9CLEVBQUUsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FDekUsQ0FDRSxHQUlDLEVBQ0QsU0FBUyxFQUNULEVBQUU7UUFDRixNQUFNLE9BQU8sR0FDWCxHQUFHLENBQUMsT0FBTztZQUNYLFVBQVUsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLFlBQVksU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQztRQUN2RSxNQUFNLFVBQVUsR0FBRyxHQUFHLENBQUMsVUFBVSxHQUFHLEtBQUssU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQztRQUNuRSxNQUFNLG9CQUFvQixHQUN4QixHQUFHLENBQUMsb0JBQW9CO1lBQ3hCLEtBQUssU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQztRQUV4RCxPQUFPLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxvQkFBb0IsRUFBRSxDQUFDO0lBQ3ZELENBQUMsRUFDRCxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxvQkFBb0IsRUFBRSxFQUFFLEVBQUUsQ0FDMUQsQ0FBQztJQUVG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
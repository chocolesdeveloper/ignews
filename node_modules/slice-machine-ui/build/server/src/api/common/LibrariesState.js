"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatComponent = exports.formatLibrary = exports.formatLibraries = exports.generateState = void 0;
const probe_image_size_1 = __importDefault(require("probe-image-size"));
const Slice_1 = require("@slicemachine/core/build/models/Slice");
const libraries_1 = require("@slicemachine/core/build/libraries");
const node_utils_1 = require("@slicemachine/core/build/node-utils");
const DEFAULT_IMAGE_DIMENSIONS = {
    width: undefined,
    height: undefined,
};
function generateState(env) {
    const libraries = (env.manifest.libraries || [])
        .map((lib) => libraries_1.handleLibraryPath(env.cwd, lib))
        .filter(Boolean);
    const state = formatLibraries(libraries);
    node_utils_1.Files.write(node_utils_1.LibrariesStatePath(env.cwd), state);
}
exports.generateState = generateState;
function formatLibraries(libraries) {
    return libraries.reduce((acc, library) => {
        return { ...acc, [library.name]: formatLibrary(library) };
    }, {});
}
exports.formatLibraries = formatLibraries;
function formatLibrary(library) {
    var _a, _b;
    const components = library.components.reduce((acc, component) => ({
        ...acc,
        [component.model.id]: formatComponent(component),
    }), {});
    return {
        name: (_a = library.meta) === null || _a === void 0 ? void 0 : _a.name,
        version: (_b = library.meta) === null || _b === void 0 ? void 0 : _b.version,
        components,
    };
}
exports.formatLibrary = formatLibrary;
function getImageDimensions(imagePath) {
    if (!imagePath || !node_utils_1.Files.exists(imagePath))
        return DEFAULT_IMAGE_DIMENSIONS;
    const imageBuffer = node_utils_1.Files.readBuffer(imagePath);
    const result = probe_image_size_1.default.sync(imageBuffer);
    if (!result)
        return DEFAULT_IMAGE_DIMENSIONS;
    return { width: result.width, height: result.height };
}
function formatComponent(slice) {
    return {
        library: slice.from,
        id: slice.model.id,
        name: slice.model.name,
        description: slice.model.description,
        model: Slice_1.Slices.fromSM(slice.model),
        mocks: (slice.mock || []).reduce((acc, variationMock) => ({
            ...acc,
            [variationMock.variation]: variationMock,
        }), {}),
        meta: {
            fileName: slice.fileName,
            extension: slice.extension,
        },
        screenshotPaths: !slice.screenshotPaths
            ? {}
            : Object.entries(slice.screenshotPaths).reduce((acc, [variationId, screenshot]) => {
                return {
                    ...acc,
                    [variationId]: {
                        path: screenshot.path,
                        ...getImageDimensions(screenshot.path),
                    },
                };
            }, {}),
    };
}
exports.formatComponent = formatComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlicmFyaWVzU3RhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zZXJ2ZXIvc3JjL2FwaS9jb21tb24vTGlicmFyaWVzU3RhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsd0VBQXFDO0FBQ3JDLGlFQUErRDtBQUMvRCxrRUFBdUU7QUFDdkUsb0VBQWdGO0FBRWhGLE1BQU0sd0JBQXdCLEdBQUc7SUFDL0IsS0FBSyxFQUFFLFNBQVM7SUFDaEIsTUFBTSxFQUFFLFNBQVM7Q0FDbEIsQ0FBQztBQUVGLFNBQWdCLGFBQWEsQ0FBQyxHQUF1QjtJQUNuRCxNQUFNLFNBQVMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztTQUM3QyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLDZCQUFpQixDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDN0MsTUFBTSxDQUFDLE9BQU8sQ0FBb0QsQ0FBQztJQUV0RSxNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDekMsa0JBQUssQ0FBQyxLQUFLLENBQUMsK0JBQWtCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFQRCxzQ0FPQztBQUVELFNBQWdCLGVBQWUsQ0FDN0IsU0FBMEQ7SUFFMUQsT0FBTyxTQUFTLENBQUMsTUFBTSxDQUFrQyxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsRUFBRTtRQUN4RSxPQUFPLEVBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7SUFDNUQsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQztBQU5ELDBDQU1DO0FBRUQsU0FBZ0IsYUFBYSxDQUMzQixPQUF5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
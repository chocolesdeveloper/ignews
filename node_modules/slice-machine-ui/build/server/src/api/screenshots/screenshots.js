"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateEnv = void 0;
const getEnv_1 = __importDefault(require("../services/getEnv"));
const generate_1 = require("./generate");
const utils_1 = require("@lib/utils");
function validateEnv(framework, simulatorUrl) {
    if (!utils_1.simulatorIsSupported(framework)) {
        const reason = "Could not generate preview: framework is not supported";
        return {
            err: new Error(reason),
            reason,
            screenshots: {},
        };
    }
    if (!simulatorUrl) {
        const reason = "Could not generate screenshots: localSlicePreviewURL undefined in sm.json file";
        return {
            err: new Error(reason),
            reason,
            screenshots: {},
        };
    }
}
exports.validateEnv = validateEnv;
async function handler({ libraryName, sliceName, }) {
    const { env } = await getEnv_1.default();
    const maybeErr = validateEnv(env.framework, env.manifest.localSliceSimulatorURL);
    if (maybeErr) {
        return maybeErr;
    }
    try {
        const { screenshots, failure } = await generate_1.generateScreenshotAndRemoveCustom(env, libraryName, sliceName);
        if (failure.length > 0) {
            const message = `Could not generate screenshots for variations: ${failure
                .map((f) => f.variationId)
                .join(" | ")}`;
            const isError = Object.keys(screenshots).length === 0;
            return {
                err: isError ? new Error(message) : null,
                reason: isError ? message : null,
                warning: isError ? null : message,
                screenshots,
            };
        }
        return {
            err: null,
            reason: null,
            screenshots,
        };
    }
    catch (e) {
        const crashMessage = "Could not generate screenshots for this slice, upload manually a screenshot";
        return {
            err: new Error(crashMessage),
            reason: crashMessage,
            warning: null,
            screenshots: {},
        };
    }
}
exports.default = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyZWVuc2hvdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zZXJ2ZXIvc3JjL2FwaS9zY3JlZW5zaG90cy9zY3JlZW5zaG90cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxnRUFBd0M7QUFDeEMseUNBQStEO0FBSy9ELHNDQUFrRDtBQUdsRCxTQUFnQixXQUFXLENBQ3pCLFNBQXFCLEVBQ3JCLFlBQWdDO0lBRWhDLElBQUksQ0FBQyw0QkFBb0IsQ0FBQyxTQUFTLENBQUMsRUFBRTtRQUNwQyxNQUFNLE1BQU0sR0FBRyx3REFBd0QsQ0FBQztRQUV4RSxPQUFPO1lBQ0wsR0FBRyxFQUFFLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQztZQUN0QixNQUFNO1lBQ04sV0FBVyxFQUFFLEVBQUU7U0FDaEIsQ0FBQztLQUNIO0lBQ0QsSUFBSSxDQUFDLFlBQVksRUFBRTtRQUNqQixNQUFNLE1BQU0sR0FDVixnRkFBZ0YsQ0FBQztRQUVuRixPQUFPO1lBQ0wsR0FBRyxFQUFFLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQztZQUN0QixNQUFNO1lBQ04sV0FBVyxFQUFFLEVBQUU7U0FDaEIsQ0FBQztLQUNIO0FBQ0gsQ0FBQztBQXZCRCxrQ0F1QkM7QUFFYyxLQUFLLFVBQVUsT0FBTyxDQUFDLEVBQ3BDLFdBQVcsRUFDWCxTQUFTLEdBQ1M7SUFDbEIsTUFBTSxFQUFFLEdBQUcsRUFBRSxHQUFHLE1BQU0sZ0JBQU0sRUFBRSxDQUFDO0lBRS9CLE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FDMUIsR0FBRyxDQUFDLFNBQVMsRUFDYixHQUFHLENBQUMsUUFBUSxDQUFDLHNCQUFzQixDQUNwQyxDQUFDO0lBQ0YsSUFBSSxRQUFRLEVBQUU7UUFDWixPQUFPLFFBQVEsQ0FBQztLQUNqQjtJQUVELElBQUk7UUFDRixNQUFNLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxHQUFHLE1BQU0sNENBQWlDLENBQ3RFLEdBQUcsRUFDSCxXQUFXLEVBQ1gsU0FBUyxDQUNWLENBQUM7UUFFRixJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ3RCLE1BQU0sT0FBTyxHQUVGLGtEQUFrRCxPQUFPO2lCQUNqRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUM7aUJBQ3pCLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBR2pCLE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztZQUV0RCxPQUFPO2dCQUNMLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJO2dCQUN4QyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUk7Z0JBQ2hDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTztnQkFDakMsV0FBVzthQUNaLENBQUM7U0FDSDtRQUVELE9BQU87WUFDTCxHQUFHLEVBQUUsSUFBSTtZQUNULE1BQU0sRUFBRSxJQUFJO1lBQ1osV0FBVztTQUNaLENBQUM7S0FDSDtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsTUFBTSxZQUFZLEdBQ2hCLDZFQUE2RSxDQUFDO1FBQ2hGLE9BQU87WUFDTCxHQUFHLEVBQUUsSUFBSSxLQUFLLENBQUMsWUFBWSxDQUFDO1lBQzVCLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLE9BQU8sRUFBRSxJQUFJO1lBQ2IsV0FBVyxFQUFFLEVBQUU7U0FDaEIsQ0FBQztLQUNIO0FBQ0gsQ0FBQztBQXRERCwwQkFzREMifQ==
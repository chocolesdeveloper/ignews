"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createComparator = void 0;
const path_1 = __importDefault(require("path"));
const files_1 = __importDefault(require("../utils/files"));
const paths_1 = require("../models/paths");
const versions_1 = require("./versions");
const versions_2 = require("../../server/src/api/services/versions");
const DefaultComparison = {
    currentVersion: "",
    onlinePackage: null,
    updateAvailable: false,
    updateCommand: "",
    packageManager: "npm",
    availableVersions: [],
};
const createComparator = (pathToPkg) => async ({ cwd }) => {
    try {
        if (!files_1.default.exists(pathToPkg)) {
            return DefaultComparison;
        }
        const versions = await versions_2.findPackageVersions(manifest.name);
        const updateAvailable = versions_1.isUpdateAvailable(manifest.version, versions);
        const isYarnPackageManager = files_1.default.exists(paths_1.YarnLock(cwd));
        const updateCommand = "toto";
        return {
            currentVersion: manifest.version,
            onlinePackage,
            updateAvailable,
            updateCommand,
            packageManager: isYarnPackageManager ? "yarn" : "npm",
            availableVersions: versions,
        };
    }
    catch (e) {
        return DefaultComparison;
    }
};
exports.createComparator = createComparator;
async function comparator({ cwd, }) {
    const pathToPkg = path_1.default.join(cwd, "package.json");
    const compareNpmVersions = exports.createComparator(pathToPkg);
    return await compareNpmVersions({ cwd });
}
exports.default = comparator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VtdmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL2Vudi9zZW12ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsZ0RBQXdCO0FBRXhCLDJEQUFtQztBQUNuQywyQ0FBMkM7QUFDM0MseUNBQStDO0FBQy9DLHFFQUE2RTtBQVM3RSxNQUFNLGlCQUFpQixHQUFlO0lBQ3BDLGNBQWMsRUFBRSxFQUFFO0lBQ2xCLGFBQWEsRUFBRSxJQUFJO0lBQ25CLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLGFBQWEsRUFBRSxFQUFFO0lBQ2pCLGNBQWMsRUFBRSxLQUFLO0lBQ3JCLGlCQUFpQixFQUFFLEVBQUU7Q0FDdEIsQ0FBQztBQUVLLE1BQU0sZ0JBQWdCLEdBQzNCLENBQUMsU0FBaUIsRUFBcUQsRUFBRSxDQUN6RSxLQUFLLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFO0lBQ2hCLElBQUk7UUFDRixJQUFJLENBQUMsZUFBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUM1QixPQUFPLGlCQUFpQixDQUFDO1NBQzFCO1FBRUQsTUFBTSxRQUFRLEdBQUcsTUFBTSw4QkFBbUIsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFMUQsTUFBTSxlQUFlLEdBQUcsNEJBQWlCLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN0RSxNQUFNLG9CQUFvQixHQUFHLGVBQUssQ0FBQyxNQUFNLENBQUMsZ0JBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQztRQUU3QixPQUFPO1lBQ0wsY0FBYyxFQUFFLFFBQVEsQ0FBQyxPQUFPO1lBQ2hDLGFBQWE7WUFDYixlQUFlO1lBQ2YsYUFBYTtZQUNiLGNBQWMsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3JELGlCQUFpQixFQUFFLFFBQVE7U0FDNUIsQ0FBQztLQUNIO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDVixPQUFPLGlCQUFpQixDQUFDO0tBQzFCO0FBQ0gsQ0FBQyxDQUFDO0FBekJTLFFBQUEsZ0JBQWdCLG9CQXlCekI7QUFFVyxLQUFLLFVBQVUsVUFBVSxDQUFDLEVBQ3ZDLEdBQUcsR0FHSjtJQUNDLE1BQU0sU0FBUyxHQUFHLGNBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sa0JBQWtCLEdBQUcsd0JBQWdCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdkQsT0FBTyxNQUFNLGtCQUFrQixDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztBQUMzQyxDQUFDO0FBUkQsNkJBUUMifQ==
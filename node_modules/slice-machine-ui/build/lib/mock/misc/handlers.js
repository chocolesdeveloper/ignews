"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleFields = void 0;
const LinkToMediaMockWidget = __importStar(require("@lib/models/common/widgets/LinkToMedia/Mock"));
const handleFieldMock = (widget, maybeFieldMock = {}, config) => {
    if (maybeFieldMock.content) {
        const { handleMockContent } = widget;
        if (handleMockContent) {
            const res = handleMockContent(maybeFieldMock.content, config);
            if (res) {
                return res;
            }
            console.warn(`[mock] content value is unsupported for field "${widget.TYPE_NAME || `dev log ${config}`}"`);
        }
    }
    const { handleMockConfig } = widget;
    if (handleMockConfig) {
        return handleMockConfig(maybeFieldMock ? maybeFieldMock.config || {} : {}, config);
    }
    console.warn(`[slice-machine] "config" property for field type "${widget.TYPE_NAME}" is not yet supported.`);
    if (!widget.TYPE_NAME) {
        console.warn("[dev log] type name undef: ", config);
    }
    return widget.createMock ? widget.createMock(config || {}) : null;
};
const handleFields = (Widgets) => (fields = [], mocks = {}) => {
    return fields.reduce((acc, { key, value }) => {
        var _a;
        const typeName = value.type;
        const widget = typeName === "Link" && ((_a = value.config) === null || _a === void 0 ? void 0 : _a.select) === "media"
            ? LinkToMediaMockWidget
            :
                Widgets[typeName];
        const maybeFieldMock = mocks[key];
        if (widget) {
            const mock = handleFieldMock(widget, maybeFieldMock, value.config);
            return {
                ...acc,
                [key]: mock,
            };
        }
        console.warn(`[slice-machine] Could not create mock for type "${value.type}": not supported.`);
        return acc;
    }, {});
};
exports.handleFields = handleFields;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWIvbW9jay9taXNjL2hhbmRsZXJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtR0FBcUY7QUFFckYsTUFBTSxlQUFlLEdBQUcsQ0FBQyxNQUFNLEVBQUUsY0FBYyxHQUFHLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRTtJQUM5RCxJQUFJLGNBQWMsQ0FBQyxPQUFPLEVBQUU7UUFFMUIsTUFBTSxFQUFFLGlCQUFpQixFQUFFLEdBQUcsTUFBTSxDQUFDO1FBQ3JDLElBQUksaUJBQWlCLEVBQUU7WUFFckIsTUFBTSxHQUFHLEdBQUcsaUJBQWlCLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztZQUM5RCxJQUFJLEdBQUcsRUFBRTtnQkFFUCxPQUFPLEdBQUcsQ0FBQzthQUNaO1lBQ0QsT0FBTyxDQUFDLElBQUksQ0FDVixrREFFRSxNQUFNLENBQUMsU0FBUyxJQUFJLFdBQVcsTUFBTSxFQUN2QyxHQUFHLENBQ0osQ0FBQztTQUNIO0tBQ0Y7SUFFRCxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsR0FBRyxNQUFNLENBQUM7SUFDcEMsSUFBSSxnQkFBZ0IsRUFBRTtRQUVwQixPQUFPLGdCQUFnQixDQUNyQixjQUFjLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQ2pELE1BQU0sQ0FDUCxDQUFDO0tBQ0g7SUFDRCxPQUFPLENBQUMsSUFBSSxDQUVWLHFEQUFxRCxNQUFNLENBQUMsU0FBUyx5QkFBeUIsQ0FDL0YsQ0FBQztJQUVGLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFO1FBQ3JCLE9BQU8sQ0FBQyxJQUFJLENBQUMsNkJBQTZCLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDckQ7SUFFRCxPQUFPLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDcEUsQ0FBQyxDQUFDO0FBRUssTUFBTSxZQUFZLEdBQ3ZCLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FDWixDQUFDLE1BQU0sR0FBRyxFQUFFLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBRSxFQUFFO0lBRTFCLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFOztRQUUzQyxNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBRTVCLE1BQU0sTUFBTSxHQUVWLFFBQVEsS0FBSyxNQUFNLElBQUksQ0FBQSxNQUFBLEtBQUssQ0FBQyxNQUFNLDBDQUFFLE1BQU0sTUFBSyxPQUFPO1lBQ3JELENBQUMsQ0FBQyxxQkFBcUI7WUFDdkIsQ0FBQztnQkFDQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFeEIsTUFBTSxjQUFjLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRWxDLElBQUksTUFBTSxFQUFFO1lBRVYsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLE1BQU0sRUFBRSxjQUFjLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRW5FLE9BQU87Z0JBQ0wsR0FBRyxHQUFHO2dCQUVOLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSTthQUNaLENBQUM7U0FDSDtRQUNELE9BQU8sQ0FBQyxJQUFJLENBRVYsbURBQW1ELEtBQUssQ0FBQyxJQUFJLG1CQUFtQixDQUNqRixDQUFDO1FBRUYsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDVCxDQUFDLENBQUM7QUFsQ1MsUUFBQSxZQUFZLGdCQWtDckIifQ==
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const faker_1 = __importDefault(require("@faker-js/faker"));
const Widgets = __importStar(require("./misc/widgets"));
const tab_1 = require("@lib/models/common/CustomType/tab");
const handlers_1 = require("./misc/handlers");
const MockConfig_1 = require("@lib/models/common/MockConfig");
const fieldsHandler = handlers_1.handleFields(Widgets);
const groupHandler = (group, mockConfig) => {
    var _a;
    const items = [];
    const entries = (_a = group.config) === null || _a === void 0 ? void 0 : _a.fields;
    for (let i = 0; i < Math.floor(Math.random() * 6) + 2; i++) {
        items.push(fieldsHandler(entries, mockConfig));
    }
    return items;
};
const sliceZoneHandler = () => { };
const createEmptyMock = (type) => ({
    id: faker_1.default.datatype.uuid(),
    uid: null,
    type,
    data: {},
});
async function MockCustomType(model, mockConfig) {
    const customTypeMock = createEmptyMock(model.id);
    const maybeUid = model.tabs.reduce((acc, curr) => {
        const maybeWidgetUid = Object.entries(curr.value).find(([_, e]) => e.value.type === "UID");
        if (!acc && maybeWidgetUid) {
            return curr;
        }
        return acc;
    });
    if (maybeUid) {
        customTypeMock.uid = Widgets.UID.handleMockConfig();
    }
    for (const [, tab] of Object.entries(model.tabs)) {
        const { fields, groups, sliceZone } = tab_1.Tab.organiseFields(tab);
        const mockedFields = fieldsHandler(fields, mockConfig);
        customTypeMock.data = {
            ...customTypeMock.data,
            ...mockedFields,
        };
        groups.forEach((group) => {
            const { key, value } = group;
            const groupMockConfig = MockConfig_1.CustomTypeMockConfig.getFieldMockConfig(mockConfig, key);
            const groupFields = groupHandler(value, groupMockConfig);
            customTypeMock.data[key] = groupFields;
        });
        if (sliceZone) {
            sliceZoneHandler();
        }
    }
    return customTypeMock;
}
exports.default = MockCustomType;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tVHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9tb2NrL0N1c3RvbVR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNERBQW9DO0FBQ3BDLHdEQUEwQztBQUMxQywyREFBd0Q7QUFFeEQsOENBQStDO0FBRS9DLDhEQUFxRTtBQVdyRSxNQUFNLGFBQWEsR0FBRyx1QkFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBRTVDLE1BQU0sWUFBWSxHQUFHLENBQUMsS0FBYyxFQUFFLFVBQWdDLEVBQUUsRUFBRTs7SUFDeEUsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2pCLE1BQU0sT0FBTyxHQUFHLE1BQUEsS0FBSyxDQUFDLE1BQU0sMENBQUUsTUFBTSxDQUFDO0lBQ3JDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDMUQsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7S0FDaEQ7SUFFRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMsQ0FBQztBQUdGLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO0FBRWxDLE1BQU0sZUFBZSxHQUFHLENBQUMsSUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3pDLEVBQUUsRUFBRSxlQUFLLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtJQUN6QixHQUFHLEVBQUUsSUFBSTtJQUNULElBQUk7SUFDSixJQUFJLEVBQUUsRUFBRTtDQUNULENBQUMsQ0FBQztBQUdZLEtBQUssVUFBVSxjQUFjLENBQzFDLEtBQW1CLEVBQ25CLFVBQWdDO0lBRWhDLE1BQU0sY0FBYyxHQUFTLGVBQWUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkQsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUU7UUFDL0MsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUVwRCxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxLQUFLLENBQ25DLENBQUM7UUFDRixJQUFJLENBQUMsR0FBRyxJQUFJLGNBQWMsRUFBRTtZQUMxQixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDLENBQUMsQ0FBQztJQUVILElBQUksUUFBUSxFQUFFO1FBQ1osY0FBYyxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLENBQUM7S0FDckQ7SUFFRCxLQUFLLE1BQU0sQ0FBQyxFQUFFLEdBQUcsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ2hELE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxHQUFHLFNBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7UUFHOUQsTUFBTSxZQUFZLEdBQUcsYUFBYSxDQUFDLE1BQVksRUFBRSxVQUFVLENBQUMsQ0FBQztRQUU3RCxjQUFjLENBQUMsSUFBSSxHQUFHO1lBQ3BCLEdBQUcsY0FBYyxDQUFDLElBQUk7WUFDdEIsR0FBRyxZQUFZO1NBQ2hCLENBQUM7UUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDdkIsTUFBTSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxLQUFLLENBQUM7WUFFN0IsTUFBTSxlQUFlLEdBQUcsaUNBQW9CLENBQUMsa0JBQWtCLENBQzdELFVBQVUsRUFDVixHQUFHLENBQ0osQ0FBQztZQUVGLE1BQU0sV0FBVyxHQUFHLFlBQVksQ0FBQyxLQUFLLEVBQUUsZUFBZSxDQUFDLENBQUM7WUFDekQsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxXQUFXLENBQUM7UUFDekMsQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLFNBQVMsRUFBRTtZQUNiLGdCQUFnQixFQUFFLENBQUM7U0FDcEI7S0FDRjtJQUNELE9BQU8sY0FBYyxDQUFDO0FBQ3hCLENBQUM7QUEvQ0QsaUNBK0NDIn0=
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomTypeMockConfig = exports.SliceMockConfig = void 0;
exports.SliceMockConfig = {
    getSliceMockConfig(globalMockConfig, libName, sliceName) {
        var _a;
        return ((_a = globalMockConfig === null || globalMockConfig === void 0 ? void 0 : globalMockConfig[libName]) === null || _a === void 0 ? void 0 : _a[sliceName]) || {};
    },
    getVariationMockConfig(sliceMockConfig, variationId) {
        return sliceMockConfig[variationId] || {};
    },
    getFieldMockConfig(sliceMockConfig, variationId, widgetArea, fieldId) {
        var _a;
        return (((_a = this.getVariationMockConfig(sliceMockConfig, variationId)[widgetArea]) === null || _a === void 0 ? void 0 : _a[fieldId]) || {});
    },
    deleteFieldMockConfig(sliceMockConfig, variationId, widgetArea, fieldId) {
        return {
            ...sliceMockConfig,
            [variationId]: {
                ...this.getVariationMockConfig(sliceMockConfig, variationId),
                [widgetArea]: {
                    ...this.getVariationMockConfig(sliceMockConfig, variationId)[widgetArea],
                    [fieldId]: undefined,
                },
            },
        };
    },
    updateFieldMockConfig(sliceMockConfig, variationId, widgetArea, previousKey, fieldId, value) {
        return {
            ...sliceMockConfig,
            [variationId]: {
                ...this.getVariationMockConfig(sliceMockConfig, variationId),
                [widgetArea]: {
                    ...this.getVariationMockConfig(sliceMockConfig, variationId)[widgetArea],
                    ...(fieldId !== previousKey
                        ? {
                            [previousKey]: undefined,
                            [fieldId]: value,
                        }
                        : {
                            [fieldId]: value,
                        }),
                },
            },
        };
    },
};
exports.CustomTypeMockConfig = {
    getCustomTypeMockConfig(globalMockConfig, ctId) {
        var _a;
        return ((_a = globalMockConfig === null || globalMockConfig === void 0 ? void 0 : globalMockConfig._cts) === null || _a === void 0 ? void 0 : _a[ctId]) || {};
    },
    getFieldMockConfig(ctMockConfig, fieldId) {
        return ctMockConfig[fieldId] || {};
    },
    deleteFieldMockConfig(ctMockConfig, fieldId) {
        return {
            ...ctMockConfig,
            [fieldId]: undefined,
        };
    },
    updateFieldMockConfig(ctMockConfig, previousFieldId, fieldId, value) {
        return {
            ...ctMockConfig,
            ...(previousFieldId !== fieldId
                ? {
                    [previousFieldId]: undefined,
                    [fieldId]: value,
                }
                : {
                    [fieldId]: value,
                }),
        };
    },
    updateGroupFieldMockConfig(ctMockConfig, groupId, previousFieldId, fieldId, value) {
        return {
            ...ctMockConfig,
            [groupId]: {
                ...this.getFieldMockConfig(ctMockConfig, groupId),
                ...(previousFieldId !== fieldId
                    ? {
                        [fieldId]: value,
                        [previousFieldId]: undefined,
                    }
                    : {
                        [fieldId]: value,
                    }),
            },
        };
    },
    deleteGroupFieldMockConfig(ctMockConfig, groupId, fieldId) {
        return {
            ...ctMockConfig,
            [groupId]: {
                ...this.getFieldMockConfig(ctMockConfig, groupId),
                [fieldId]: undefined,
            },
        };
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9ja0NvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9tb2RlbHMvY29tbW9uL01vY2tDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBWWEsUUFBQSxlQUFlLEdBQUc7SUFDN0Isa0JBQWtCLENBQ2hCLGdCQUFrQyxFQUNsQyxPQUFlLEVBQ2YsU0FBaUI7O1FBR2pCLE9BQU8sQ0FBQSxNQUFBLGdCQUFnQixhQUFoQixnQkFBZ0IsdUJBQWhCLGdCQUFnQixDQUFHLE9BQU8sQ0FBQywwQ0FBRyxTQUFTLENBQUMsS0FBSSxFQUFFLENBQUM7SUFDeEQsQ0FBQztJQUNELHNCQUFzQixDQUNwQixlQUFnQyxFQUNoQyxXQUFtQjtRQUduQixPQUFPLGVBQWUsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDNUMsQ0FBQztJQUNELGtCQUFrQixDQUNoQixlQUFnQyxFQUNoQyxXQUFtQixFQUNuQixVQUE4QixFQUM5QixPQUFlOztRQUdmLE9BQU8sQ0FFTCxDQUFBLE1BQUEsSUFBSSxDQUFDLHNCQUFzQixDQUFDLGVBQWUsRUFBRSxXQUFXLENBQUMsQ0FBQyxVQUFVLENBQUMsMENBQ25FLE9BQU8sQ0FDUixLQUFJLEVBQUUsQ0FDUixDQUFDO0lBQ0osQ0FBQztJQUNELHFCQUFxQixDQUNuQixlQUFnQyxFQUNoQyxXQUFtQixFQUNuQixVQUE4QixFQUM5QixPQUFlO1FBRWYsT0FBTztZQUNMLEdBQUcsZUFBZTtZQUVsQixDQUFDLFdBQVcsQ0FBQyxFQUFFO2dCQUNiLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLGVBQWUsRUFBRSxXQUFXLENBQUM7Z0JBRTVELENBQUMsVUFBVSxDQUFDLEVBQUU7b0JBRVosR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUMsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUMxRCxVQUFVLENBQ1g7b0JBQ0QsQ0FBQyxPQUFPLENBQUMsRUFBRSxTQUFTO2lCQUNyQjthQUNG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
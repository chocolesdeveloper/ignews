"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Group = void 0;
exports.Group = {
    addWidget(group, newField) {
        return {
            ...group,
            config: {
                ...group.config,
                fields: [...group.config.fields, newField],
            },
        };
    },
    deleteWidget(group, wkey) {
        return {
            ...group,
            config: {
                ...group.config,
                fields: group.config.fields.filter(({ key }) => key !== wkey),
            },
        };
    },
    reorderWidget(group, start, end) {
        const reorderedWidget = group.config.fields[start];
        if (!reorderedWidget)
            throw new Error(`Unable to reorder the widget at index ${start}.`);
        const reorderedArea = group.config.fields.reduce((acc, field, index) => {
            const elems = [field, reorderedWidget];
            switch (index) {
                case start:
                    return acc;
                case end:
                    return [...acc, ...(end > start ? elems : elems.reverse())];
                default:
                    return [...acc, field];
            }
        }, []);
        return {
            ...group,
            config: {
                ...group.config,
                fields: reorderedArea,
            },
        };
    },
    replaceWidget(group, previousKey, newKey, value) {
        return {
            ...group,
            config: {
                ...group.config,
                fields: group.config.fields.map((t) => {
                    if (t.key === previousKey) {
                        return {
                            key: newKey,
                            value,
                        };
                    }
                    return t;
                }),
            },
        };
    },
    toArray(group) {
        return {
            ...group,
            config: {
                ...group.config,
                fields: Object.entries(group.config.fields).map(([key, value]) => ({
                    key,
                    value,
                })),
            },
        };
    },
    toObject(group) {
        return {
            ...group,
            config: {
                ...group.config,
                fields: group.config.fields.reduce((acc, { key, value }) => ({ ...acc, [key]: value }), {}),
            },
        };
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWIvbW9kZWxzL2NvbW1vbi9DdXN0b21UeXBlL2dyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQWNhLFFBQUEsS0FBSyxHQUFHO0lBQ25CLFNBQVMsQ0FDUCxLQUEwQixFQUMxQixRQUF1QztRQUV2QyxPQUFPO1lBQ0wsR0FBRyxLQUFLO1lBQ1IsTUFBTSxFQUFFO2dCQUNOLEdBQUcsS0FBSyxDQUFDLE1BQU07Z0JBQ2YsTUFBTSxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUM7YUFDM0M7U0FDRixDQUFDO0lBQ0osQ0FBQztJQUNELFlBQVksQ0FBQyxLQUEwQixFQUFFLElBQVk7UUFDbkQsT0FBTztZQUNMLEdBQUcsS0FBSztZQUNSLE1BQU0sRUFBRTtnQkFDTixHQUFHLEtBQUssQ0FBQyxNQUFNO2dCQUNmLE1BQU0sRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDO2FBQzlEO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFDRCxhQUFhLENBQ1gsS0FBMEIsRUFDMUIsS0FBYSxFQUNiLEdBQVc7UUFFWCxNQUFNLGVBQWUsR0FDbkIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLGVBQWU7WUFDbEIsTUFBTSxJQUFJLEtBQUssQ0FBQyx5Q0FBeUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUVyRSxNQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBRTlDLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUN0QixNQUFNLEtBQUssR0FBRyxDQUFDLEtBQUssRUFBRSxlQUFlLENBQUMsQ0FBQztZQUN2QyxRQUFRLEtBQUssRUFBRTtnQkFDYixLQUFLLEtBQUs7b0JBQ1IsT0FBTyxHQUFHLENBQUM7Z0JBQ2IsS0FBSyxHQUFHO29CQUNOLE9BQU8sQ0FBQyxHQUFHLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUM5RDtvQkFDRSxPQUFPLENBQUMsR0FBRyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDMUI7UUFDSCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFUCxPQUFPO1lBQ0wsR0FBRyxLQUFLO1lBQ1IsTUFBTSxFQUFFO2dCQUNOLEdBQUcsS0FBSyxDQUFDLE1BQU07Z0JBQ2YsTUFBTSxFQUFFLGFBQWE7YUFDdEI7U0FDRixDQUFDO0lBQ0osQ0FBQztJQUNELGFBQWEsQ0FDWCxLQUEwQixFQUMxQixXQUFtQixFQUNuQixNQUFjLEVBQ2QsS0FBWTtRQUVaLE9BQU87WUFDTCxHQUFHLEtBQUs7WUFDUixNQUFNLEVBQUU7Z0JBQ04sR0FBRyxLQUFLLENBQUMsTUFBTTtnQkFDZixNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7b0JBQ3BDLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxXQUFXLEVBQUU7d0JBQ3pCLE9BQU87NEJBQ0wsR0FBRyxFQUFFLE1BQU07NEJBQ1gsS0FBSzt5QkFDTixDQUFDO3FCQUNIO29CQUNELE9BQU8sQ0FBQyxDQUFDO2dCQUNYLENBQUMsQ0FBQzthQUNIO1NBQ0YsQ0FBQztJQUNKLENBQUM7SUFDRCxPQUFPLENBQUMsS0FBMkI7UUFDakMsT0FBTztZQUNMLEdBQUcsS0FBSztZQUNSLE1BQU0sRUFBRTtnQkFDTixHQUFHLEtBQUssQ0FBQyxNQUFNO2dCQUNmLE1BQU0sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBQ2pFLEdBQUc7b0JBQ0gsS0FBSztpQkFDTixDQUFDLENBQUM7YUFDSjtTQUNGLENBQUM7SUFDSixDQUFDO0lBQ0QsUUFBUSxDQUFDLEtBQTBCO1FBQ2pDLE9BQU87WUFDTCxHQUFHLEtBQUs7WUFDUixNQUFNLEVBQUU7Z0JBQ04sR0FBRyxLQUFLLENBQUMsTUFBTTtnQkFDZixNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUNoQyxDQUFDLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFDbkQsRUFBRSxDQUNIO2FBQ0Y7U0FDRixDQUFDO0lBQ0osQ0FBQztDQUNGLENBQUMifQ==
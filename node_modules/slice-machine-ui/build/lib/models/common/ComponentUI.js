"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentUI = exports.LibStatus = exports.buildScreenshotUrls = exports.createScreenshotUI = exports.createScreenshotUrl = void 0;
const utils_1 = require("../../utils");
const createScreenshotUrl = (baseUrl, pathToScreenshot) => `${baseUrl}/api/__preview?q=${encodeURIComponent(pathToScreenshot)}&uniq=${Math.random()}`;
exports.createScreenshotUrl = createScreenshotUrl;
const createScreenshotUI = (baseUrl, pathToScreenshot) => ({
    path: pathToScreenshot,
    url: exports.createScreenshotUrl(baseUrl, pathToScreenshot),
});
exports.createScreenshotUI = createScreenshotUI;
const buildScreenshotUrls = (screenshotPaths, baseUrl) => {
    if (!screenshotPaths) {
        return {};
    }
    return Object.entries(screenshotPaths).reduce((acc, [variationId, screenshot]) => {
        return screenshot.path
            ? {
                ...acc,
                [variationId]: exports.createScreenshotUI(baseUrl, screenshot.path),
            }
            : acc;
    }, {});
};
exports.buildScreenshotUrls = buildScreenshotUrls;
var LibStatus;
(function (LibStatus) {
    LibStatus["Modified"] = "MODIFIED";
    LibStatus["Synced"] = "SYNCED";
    LibStatus["Invalid"] = "INVALID";
    LibStatus["NewSlice"] = "NEW_SLICE";
})(LibStatus = exports.LibStatus || (exports.LibStatus = {}));
exports.ComponentUI = {
    build(component, remoteSlices, env) {
        return {
            ...component,
            screenshotUrls: exports.buildScreenshotUrls(component.screenshotPaths, env.baseUrl),
            __status: computeStatus(component, remoteSlices),
        };
    },
};
function computeStatus(component, remoteSlices) {
    const slice = remoteSlices.find((s) => component.model.id === s.id);
    if (!slice)
        return LibStatus.NewSlice;
    const sameVersion = utils_1.compareVariations(component.model.variations, slice.variations);
    if (sameVersion)
        return LibStatus.Synced;
    else
        return LibStatus.Modified;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcG9uZW50VUkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWIvbW9kZWxzL2NvbW1vbi9Db21wb25lbnRVSS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFNQSx1Q0FBZ0Q7QUFHekMsTUFBTSxtQkFBbUIsR0FBRyxDQUNqQyxPQUFlLEVBQ2YsZ0JBQXdCLEVBQ2hCLEVBQUUsQ0FDVixHQUFHLE9BQU8sb0JBQW9CLGtCQUFrQixDQUM5QyxnQkFBZ0IsQ0FDakIsU0FBUyxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQztBQU5mLFFBQUEsbUJBQW1CLHVCQU1KO0FBRXJCLE1BQU0sa0JBQWtCLEdBQUcsQ0FDaEMsT0FBZSxFQUNmLGdCQUF3QixFQUNWLEVBQUUsQ0FBQyxDQUFDO0lBQ2xCLElBQUksRUFBRSxnQkFBZ0I7SUFDdEIsR0FBRyxFQUFFLDJCQUFtQixDQUFDLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQztDQUNwRCxDQUFDLENBQUM7QUFOVSxRQUFBLGtCQUFrQixzQkFNNUI7QUFFSSxNQUFNLG1CQUFtQixHQUFHLENBQ2pDLGVBSWEsRUFDYixPQUFlLEVBQ2YsRUFBRTtJQUNGLElBQUksQ0FBQyxlQUFlLEVBQUU7UUFDcEIsT0FBTyxFQUFFLENBQUM7S0FDWDtJQUNELE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLENBQzNDLENBQUMsR0FBRyxFQUFFLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxFQUFFLEVBQUU7UUFDakMsT0FBTyxVQUFVLENBQUMsSUFBSTtZQUNwQixDQUFDLENBQUM7Z0JBQ0UsR0FBRyxHQUFHO2dCQUNOLENBQUMsV0FBVyxDQUFDLEVBQUUsMEJBQWtCLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUM7YUFDNUQ7WUFDSCxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQ1YsQ0FBQyxFQUNELEVBQUUsQ0FDSCxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBdEJXLFFBQUEsbUJBQW1CLHVCQXNCOUI7QUFFRixJQUFZLFNBS1g7QUFMRCxXQUFZLFNBQVM7SUFDbkIsa0NBQXFCLENBQUE7SUFDckIsOEJBQWlCLENBQUE7SUFDakIsZ0NBQW1CLENBQUE7SUFDbkIsbUNBQXNCLENBQUE7QUFDeEIsQ0FBQyxFQUxXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBS3BCO0FBV1ksUUFBQSxXQUFXLEdBQUc7SUFDekIsS0FBSyxDQUNILFNBQW9CLEVBQ3BCLFlBQW9DLEVBQ3BDLEdBQXVCO1FBRXZCLE9BQU87WUFDTCxHQUFHLFNBQVM7WUFDWixjQUFjLEVBQUUsMkJBQW1CLENBQ2pDLFNBQVMsQ0FBQyxlQUFlLEVBQ3pCLEdBQUcsQ0FBQyxPQUFPLENBQ1o7WUFDRCxRQUFRLEVBQUUsYUFBYSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUM7U0FDakQsQ0FBQztJQUNKLENBQUM7Q0FDRixDQUFDO0FBRUYsU0FBUyxhQUFhLENBQ3BCLFNBQW9CLEVBQ3BCLFlBQW9DO0lBRXBDLE1BQU0sS0FBSyxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNwRSxJQUFJLENBQUMsS0FBSztRQUFFLE9BQU8sU0FBUyxDQUFDLFFBQVEsQ0FBQztJQUV0QyxNQUFNLFdBQVcsR0FBRyx5QkFBaUIsQ0FDbkMsU0FBUyxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQzFCLEtBQUssQ0FBQyxVQUFVLENBQ2pCLENBQUM7SUFFRixJQUFJLFdBQVc7UUFBRSxPQUFPLFNBQVMsQ0FBQyxNQUFNLENBQUM7O1FBQ3BDLE9BQU8sU0FBUyxDQUFDLFFBQVEsQ0FBQztBQUNqQyxDQUFDIn0=
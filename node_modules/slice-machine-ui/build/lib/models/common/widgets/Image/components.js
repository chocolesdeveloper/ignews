"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConstraintForm = exports.AddThumbnailButton = exports.ThumbnailButton = void 0;
const react_1 = require("react");
const bs_1 = require("react-icons/bs");
const md_1 = require("react-icons/md");
const theme_ui_1 = require("theme-ui");
const SliceMachineIconButton_1 = __importDefault(require("@components/SliceMachineIconButton"));
const FormFields_1 = require("@components/FormFields");
const formik_1 = require("formik");
const ThumbnailButton = ({ onClick, error, onDelete, active, text, sx, }) => (<SliceMachineIconButton_1.default useActive fitButton error={error} onClick={onClick} active={active} sx={{ position: "relative", width: "64px", height: "64px", ...sx }} Icon={() => (<react_1.Fragment>
        <theme_ui_1.Flex sx={{
            flexDirection: "column",
            justifyContent: "center",
            alignItems: "center",
        }}>
          <bs_1.BsImage size={22}/>
          <theme_ui_1.Text mt={1}>{text}</theme_ui_1.Text>
        </theme_ui_1.Flex>
        {onDelete ? (<theme_ui_1.Badge onClick={onDelete} variant="circle-right">
            <md_1.MdCancel />
          </theme_ui_1.Badge>) : null}
      </react_1.Fragment>)}/>);
exports.ThumbnailButton = ThumbnailButton;
const AddThumbnailButton = ({ onClick }) => (<SliceMachineIconButton_1.default fitButton onClick={onClick} sx={{
        width: "64px",
        height: "64px",
        border: ({ colors }) => `1px solid ${colors.borders}`,
    }} Icon={() => (<theme_ui_1.Flex sx={{
            flexDirection: "column",
            justifyContent: "center",
            alignItems: "center",
        }}>
        <bs_1.BsFillPlusSquareFill size={34} color="#5263BA"/>
      </theme_ui_1.Flex>)}/>);
exports.AddThumbnailButton = AddThumbnailButton;
const ConstraintForm = ({ prefix, required, display, error = {} }) => {
    if (!display) {
        return null;
    }
    const requiredChar = required ? "*" : "";
    const [field, meta, helpers] = formik_1.useField(prefix);
    const createSetField = (key, fn = (v) => v) => (e) => {
        helpers.setTouched(true);
        const cast = fn(e.target.value);
        const value = e.target.type === "number" ? (isNaN(cast) ? null : cast) : cast;
        helpers.setValue({ ...field.value, [key]: value });
    };
    return (<react_1.Fragment>
      <FormFields_1.FormFieldInput fieldName={`${prefix}.name`} meta={{
            ...meta,
            error: meta.error && meta.error.name,
        }} formField={{ label: `Name${requiredChar}`, placeholder: "main" }} field={prefix === "config.constraint"
            ? { value: "main", readOnly: true }
            :
                { value: field.value.name, onChange: createSetField("name") }} variant={prefix === "config.constraint" ? "disabled" : "primary"} sx={{ mb: 3 }}/>
      <FormFields_1.FormFieldInput fieldName={`${prefix}.width`} meta={{
            ...meta,
            error: meta.error && meta.error.width,
        }} formField={{ label: `Width (px)${requiredChar}`, placeholder: " " }} field={{
            type: "number",
            value: field.value.width,
            onChange: createSetField("width", parseInt),
        }} sx={{ mb: 3 }}/>
      <FormFields_1.FormFieldInput fieldName={`${prefix}.height`} meta={{
            ...meta,
            error: meta.error && meta.error.height,
        }} formField={{ label: `Height (px)${requiredChar}`, placeholder: " " }} field={{
            type: "number",
            value: field.value.height,
            onChange: createSetField("height", parseInt),
        }}/>
    </react_1.Fragment>);
};
exports.ConstraintForm = ConstraintForm;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYi9tb2RlbHMvY29tbW9uL3dpZGdldHMvSW1hZ2UvY29tcG9uZW50cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxpQ0FBaUM7QUFDakMsdUNBQStEO0FBQy9ELHVDQUEwQztBQUUxQyx1Q0FBNkM7QUFDN0MsZ0dBQXdFO0FBQ3hFLHVEQUF3RDtBQUN4RCxtQ0FBa0M7QUFFM0IsTUFBTSxlQUFlLEdBQUcsQ0FBQyxFQUM5QixPQUFPLEVBQ1AsS0FBSyxFQUNMLFFBQVEsRUFDUixNQUFNLEVBQ04sSUFBSSxFQUNKLEVBQUUsR0FDSCxFQUFFLEVBQUUsQ0FBQyxDQUNKLENBQUMsZ0NBQXNCLENBQ3JCLFNBQVMsQ0FDVCxTQUFTLENBRVQsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLENBRWIsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBRWpCLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUVmLEVBQUUsQ0FBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUNuRSxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUNWLENBQUMsZ0JBQVEsQ0FDUDtRQUFBLENBQUMsZUFBSSxDQUNILEVBQUUsQ0FBQyxDQUFDO1lBQ0YsYUFBYSxFQUFFLFFBQVE7WUFDdkIsY0FBYyxFQUFFLFFBQVE7WUFDeEIsVUFBVSxFQUFFLFFBQVE7U0FDckIsQ0FBQyxDQUVGO1VBQUEsQ0FBQyxZQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQ2xCO1VBQUEsQ0FBQyxlQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxlQUFJLENBQzNCO1FBQUEsRUFB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
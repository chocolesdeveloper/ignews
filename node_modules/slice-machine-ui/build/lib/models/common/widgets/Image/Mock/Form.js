"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockConfigForm = void 0;
const react_1 = require("react");
const theme_ui_1 = require("theme-ui");
const fa_1 = require("react-icons/fa");
const formik_1 = require("formik");
const _1 = require(".");
const Tooltip_1 = __importDefault(require("components/Tooltip"));
const WindowPortal_1 = __importDefault(require("components/WindowPortal"));
const InputDeleteIcon_1 = __importDefault(require("components/InputDeleteIcon"));
const consts_1 = require("../../../../../consts");
const dataset = __importStar(require("./dataset"));
const components_1 = require("./components");
const dataTip = "In order for Prismic to properly display images,<br/>they need to be provided by Imgix.";
const ImageSelection = ({ value, onUpdate }) => {
    const [imagesSet, setImagesSet] = react_1.useState({ images: null, name: null });
    const onChange = (e) => {
        e.preventDefault();
        onUpdate(e.target.src);
        setImagesSet({ images: null, name: null });
    };
    const onSelect = (set) => {
        setImagesSet({ images: dataset[set], name: set });
    };
    return (<theme_ui_1.Box>
      <theme_ui_1.Label variant="label.primary" mt={3} mb={2} htmlFor="contentValue">
        <theme_ui_1.Text as="span">Presets</theme_ui_1.Text>
      </theme_ui_1.Label>
      <components_1.ImagesListCards onSelect={onSelect}/>
      {imagesSet.images ? (<WindowPortal_1.default onClose={() => setImagesSet({ images: null, name: null })}>
          <components_1.ImagesList listName={imagesSet.name} images={imagesSet.images} value={value} onChange={onChange}/>
        </WindowPortal_1.default>) : null}
    </theme_ui_1.Box>);
};
const InputSrc = ({ value, onUpdate, onReset }) => {
    const { theme } = theme_ui_1.useThemeUI();
    return (<theme_ui_1.Box>
      <theme_ui_1.Label variant="label.primary" mt={3} mb={2} htmlFor="contentValue">
        <theme_ui_1.Text as="span">Prismic or Unsplash url</theme_ui_1.Text>
        <Tooltip_1.default id="image-mock"/>
        <fa_1.FaRegQuestionCircle color={theme.colors.icons} data-for="image-mock" data-multiline="true" data-tip={dataTip} style={{
            position: "relative",
            cursor: "pointer",
            top: "3px",
            height: "18px",
            marginLeft: "8px",
        }}/>
      </theme_ui_1.Label>
      <theme_ui_1.Box sx={{ position: "relative" }}>
        <theme_ui_1.Input value={value || ""} placeholder="https://images.prismic.io/..." onChange={(e) => onUpdate(e.target.value)}/>

        <InputDeleteIcon_1.default sx={{ top: "4px" }} onClick={onReset}/>
      </theme_ui_1.Box>
    </theme_ui_1.Box>);
};
const Form = () => {
    var _a;
    const { values, setFieldValue } = formik_1.useFormikContext();
    const contentValue = ((_a = values[consts_1.MockConfigKey]) === null || _a === void 0 ? void 0 : _a.content) || null;
    const onUpdate = (value) => {
        const clean = value.split("?")[0];
        setFieldValue(consts_1.MockConfigKey, {
            content: clean,
        });
    };
    const onReset = () => {
        setFieldValue(consts_1.MockConfigKey, {});
    };
    return (<theme_ui_1.Box>
      <InputSrc value={contentValue} onUpdate={onUpdate} onReset={onReset}/>
      <theme_ui_1.Box mt={3}>
        <ImageSelection value={contentValue} onUpdate={onUpdate}/>
      </theme_ui_1.Box>
    </theme_ui_1.Box>);
};
Form.initialValues = _1.initialValues;
exports.MockConfigForm = Form;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9ybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYi9tb2RlbHMvY29tbW9uL3dpZGdldHMvSW1hZ2UvTW9jay9Gb3JtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQ0FBaUM7QUFDakMsdUNBQStEO0FBQy9ELHVDQUFxRDtBQUNyRCxtQ0FBMEM7QUFFMUMsd0JBQWtDO0FBRWxDLGlFQUF5QztBQUN6QywyRUFBbUQ7QUFDbkQsaUZBQXlEO0FBRXpELGtEQUFzRDtBQUV0RCxtREFBcUM7QUFFckMsNkNBQTJEO0FBRTNELE1BQU0sT0FBTyxHQUNYLHlGQUF5RixDQUFDO0FBRTVGLE1BQU0sY0FBYyxHQUFHLENBQUMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtJQUM3QyxNQUFNLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxHQUFHLGdCQUFRLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRXpFLE1BQU0sUUFBUSxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUU7UUFFckIsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBRW5CLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLFlBQVksQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFDN0MsQ0FBQyxDQUFDO0lBRUYsTUFBTSxRQUFRLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBRTtRQUV2QixZQUFZLENBQUMsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3BELENBQUMsQ0FBQztJQUVGLE9BQU8sQ0FDTCxDQUFDLGNBQUcsQ0FDRjtN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
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GeoPointWidget = void 0;
const yup = __importStar(require("yup"));
const md_1 = require("react-icons/md");
const Mock_1 = require("./Mock");
const Form_1 = require("./Mock/Form");
const defaults_1 = require("../../../../forms/defaults");
const type_1 = require("./type");
const fields_1 = require("../../CustomType/fields");
const FormFields = {
    label: defaults_1.DefaultFields.label,
    id: defaults_1.DefaultFields.id,
};
const schema = yup.object().shape({
    type: yup
        .string()
        .matches(/^GeoPoint$/, { excludeEmptyString: true })
        .required(),
    config: yup
        .object()
        .shape({
        label: yup.string(),
    })
        .required()
        .default(undefined)
        .noUnknown(true),
});
const Meta = {
    icon: md_1.MdPlace,
    title: "GeoPoint",
    description: "A field for storing geo-coordinates",
};
exports.GeoPointWidget = {
    create: (label) => new type_1.GeoPointField({ label }),
    handleMockConfig: Mock_1.handleMockConfig,
    handleMockContent: Mock_1.handleMockContent,
    MockConfigForm: Form_1.MockConfigForm,
    FormFields,
    TYPE_NAME: fields_1.FieldType.GeoPoint,
    schema,
    Meta,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWIvbW9kZWxzL2NvbW1vbi93aWRnZXRzL0dlb1BvaW50L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5Q0FBMkI7QUFDM0IsdUNBQXlDO0FBQ3pDLGlDQUE2RDtBQUM3RCxzQ0FBNkM7QUFFN0MseURBQTJEO0FBRzNELGlDQUF1QztBQUN2QyxvREFBb0Q7QUFTcEQsTUFBTSxVQUFVLEdBQUc7SUFFakIsS0FBSyxFQUFFLHdCQUFhLENBQUMsS0FBSztJQUUxQixFQUFFLEVBQUUsd0JBQWEsQ0FBQyxFQUFFO0NBQ3JCLENBQUM7QUFFRixNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDO0lBQ2hDLElBQUksRUFBRSxHQUFHO1NBQ04sTUFBTSxFQUFFO1NBQ1IsT0FBTyxDQUFDLFlBQVksRUFBRSxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxDQUFDO1NBQ25ELFFBQVEsRUFBRTtJQUViLE1BQU0sRUFBRSxHQUFHO1NBQ1IsTUFBTSxFQUFFO1NBQ1IsS0FBSyxDQUFDO1FBQ0wsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUU7S0FDcEIsQ0FBQztTQUNELFFBQVEsRUFBRTtTQUNWLE9BQU8sQ0FBQyxTQUFTLENBQUM7U0FDbEIsU0FBUyxDQUFDLElBQUksQ0FBQztDQUNuQixDQUFDLENBQUM7QUFFSCxNQUFNLElBQUksR0FBRztJQUNYLElBQUksRUFBRSxZQUFPO0lBQ2IsS0FBSyxFQUFFLFVBQVU7SUFDakIsV0FBVyxFQUFFLHFDQUFxQztDQUNuRCxDQUFDO0FBRVcsUUFBQSxjQUFjLEdBQXlDO0lBQ2xFLE1BQU0sRUFBRSxDQUFDLEtBQWEsRUFBRSxFQUFFLENBQUMsSUFBSSxvQkFBYSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUM7SUFDdkQsZ0JBQWdCLEVBQWhCLHVCQUFnQjtJQUNoQixpQkFBaUIsRUFBakIsd0JBQWlCO0lBQ2pCLGNBQWMsRUFBZCxxQkFBYztJQUNkLFVBQVU7SUFDVixTQUFTLEVBQUUsa0JBQVMsQ0FBQyxRQUFRO0lBQzdCLE1BQU07SUFDTixJQUFJO0NBQ0wsQ0FBQyJ9
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinkWidget = exports.linkConfigSchema = void 0;
const yup = __importStar(require("yup"));
const Form_1 = __importStar(require("./Form"));
const fi_1 = require("react-icons/fi");
const Mock_1 = require("./Mock");
const Form_2 = require("./Mock/Form");
const fields_1 = require("../../CustomType/fields");
const type_1 = require("./type");
const Meta = {
    icon: fi_1.FiLink2,
    title: "Link",
    description: "A link to web, media or Prismic document",
};
exports.linkConfigSchema = yup
    .object()
    .shape({
    label: yup.string().optional(),
    useAsTitle: yup.boolean().optional(),
    placeholder: yup.string().optional(),
    select: yup
        .string()
        .optional()
        .oneOf(["media", "document", "web"])
        .nullable(true),
    customtypes: yup.array(yup.string()).strict().optional(),
    masks: yup.array(yup.string()).optional(),
    tags: yup.array(yup.string()).optional(),
    allowTargetBlank: yup.boolean().strict().optional(),
})
    .required()
    .default(undefined)
    .noUnknown(true);
const schema = yup.object().shape({
    type: yup
        .string()
        .matches(/^Link$/, { excludeEmptyString: true })
        .required(),
    config: exports.linkConfigSchema.optional(),
});
exports.LinkWidget = {
    handleMockConfig: Mock_1.handleMockConfig,
    handleMockContent: Mock_1.handleMockContent,
    MockConfigForm: Form_2.MockConfigForm,
    Meta,
    FormFields: Form_1.FormFields,
    schema,
    Form: Form_1.default,
    create: (label) => new type_1.LinkField({ label }),
    TYPE_NAME: fields_1.FieldType.Link,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWIvbW9kZWxzL2NvbW1vbi93aWRnZXRzL0xpbmsvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHlDQUEyQjtBQUMzQiwrQ0FBMEM7QUFDMUMsdUNBQXlDO0FBRXpDLGlDQUE2RDtBQUM3RCxzQ0FBNkM7QUFHN0Msb0RBQW9EO0FBRXBELGlDQUFtQztBQStDbkMsTUFBTSxJQUFJLEdBQUc7SUFDWCxJQUFJLEVBQUUsWUFBTztJQUNiLEtBQUssRUFBRSxNQUFNO0lBQ2IsV0FBVyxFQUFFLDBDQUEwQztDQUN4RCxDQUFDO0FBR1csUUFBQSxnQkFBZ0IsR0FBRyxHQUFHO0tBQ2hDLE1BQU0sRUFBRTtLQUNSLEtBQUssQ0FBQztJQUNMLEtBQUssRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO0lBQzlCLFVBQVUsRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFO0lBQ3BDLFdBQVcsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO0lBQ3BDLE1BQU0sRUFBRSxHQUFHO1NBQ1IsTUFBTSxFQUFFO1NBQ1IsUUFBUSxFQUFFO1NBQ1YsS0FBSyxDQUFDLENBQUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUNuQyxRQUFRLENBQUMsSUFBSSxDQUFDO0lBQ2pCLFdBQVcsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRTtJQUN4RCxLQUFLLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxRQUFRLEVBQUU7SUFDekMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFO0lBQ3hDLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7Q0FDcEQsQ0FBQztLQUNELFFBQVEsRUFBRTtLQUNWLE9BQU8sQ0FBQyxTQUFTLENBQUM7S0FDbEIsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRW5CLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUM7SUFDaEMsSUFBSSxFQUFFLEdBQUc7U0FDTixNQUFNLEVBQUU7U0FDUixPQUFPLENBQUMsUUFBUSxFQUFFLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLENBQUM7U0FDL0MsUUFBUSxFQUFFO0lBRWIsTUFBTSxFQUFFLHdCQUFnQixDQUFDLFFBQVEsRUFBRTtDQUNwQyxDQUFDLENBQUM7QUFFVSxRQUFBLFVBQVUsR0FBcUM7SUFDMUQsZ0JBQWdCLEVBQWhCLHVCQUFnQjtJQUNoQixpQkFBaUIsRUFBakIsd0JBQWlCO0lBQ2pCLGNBQWMsRUFBZCxxQkFBYztJQUNkLElBQUk7SUFFSixVQUFVLEVBQVYsaUJBQVU7SUFDVixNQUFNO0lBQ04sSUFBSSxFQUFKLGNBQUk7SUFDSixNQUFNLEVBQUUsQ0FBQyxLQUFhLEVBQUUsRUFBRSxDQUFDLElBQUksZ0JBQVMsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDO0lBQ25ELFNBQVMsRUFBRSxrQkFBUyxDQUFDLElBQUk7Q0FDMUIsQ0FBQyJ9
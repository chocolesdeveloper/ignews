"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinkToMediaWidget = void 0;
const yup = __importStar(require("yup"));
const md_1 = require("react-icons/md");
const Mock_1 = require("./Mock");
const Form_1 = require("./Mock/Form");
const fields_1 = require("../../CustomType/fields");
const Link_1 = require("@lib/models/common/widgets/Link");
const Form_2 = __importStar(require("@lib/models/common/widgets/Link/Form"));
const type_1 = require("@lib/models/common/widgets/LinkToMedia/type");
const Meta = {
    icon: md_1.MdAttachment,
    title: "Link to media",
    description: "A link to files, document and media",
};
const linkToMediaConfigSchema = Link_1.linkConfigSchema.shape({
    select: yup
        .string()
        .required()
        .matches(/^media$/, { excludeEmptyString: true }),
});
const schema = yup.object().shape({
    type: yup
        .string()
        .matches(/^Link$/, { excludeEmptyString: true })
        .required(),
    config: linkToMediaConfigSchema.optional(),
});
exports.LinkToMediaWidget = {
    handleMockConfig: Mock_1.handleMockConfig,
    handleMockContent: Mock_1.handleMockContent,
    MockConfigForm: Form_1.MockConfigForm,
    Meta,
    FormFields: Form_2.FormFields,
    schema,
    Form: Form_2.default,
    create: (label) => new type_1.LinkToMediaField({ label }),
    TYPE_NAME: fields_1.FieldType.Link,
    CUSTOM_NAME: "LinkToMedia",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWIvbW9kZWxzL2NvbW1vbi93aWRnZXRzL0xpbmtUb01lZGlhL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx5Q0FBMkI7QUFDM0IsdUNBQThDO0FBRTlDLGlDQUE2RDtBQUM3RCxzQ0FBNkM7QUFHN0Msb0RBQW9EO0FBRXBELDBEQUFtRTtBQUNuRSw2RUFBd0U7QUFDeEUsc0VBQStFO0FBRS9FLE1BQU0sSUFBSSxHQUFHO0lBQ1gsSUFBSSxFQUFFLGlCQUFZO0lBQ2xCLEtBQUssRUFBRSxlQUFlO0lBQ3RCLFdBQVcsRUFBRSxxQ0FBcUM7Q0FDbkQsQ0FBQztBQUdGLE1BQU0sdUJBQXVCLEdBQUcsdUJBQWdCLENBQUMsS0FBSyxDQUFDO0lBQ3JELE1BQU0sRUFBRSxHQUFHO1NBQ1IsTUFBTSxFQUFFO1NBQ1IsUUFBUSxFQUFFO1NBQ1YsT0FBTyxDQUFDLFNBQVMsRUFBRSxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSxDQUFDO0NBQ3BELENBQUMsQ0FBQztBQUVILE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUM7SUFDaEMsSUFBSSxFQUFFLEdBQUc7U0FDTixNQUFNLEVBQUU7U0FDUixPQUFPLENBQUMsUUFBUSxFQUFFLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLENBQUM7U0FDL0MsUUFBUSxFQUFFO0lBRWIsTUFBTSxFQUFFLHVCQUF1QixDQUFDLFFBQVEsRUFBRTtDQUMzQyxDQUFDLENBQUM7QUFFVSxRQUFBLGlCQUFpQixHQUE0QztJQUN4RSxnQkFBZ0IsRUFBaEIsdUJBQWdCO0lBQ2hCLGlCQUFpQixFQUFqQix3QkFBaUI7SUFDakIsY0FBYyxFQUFkLHFCQUFjO0lBQ2QsSUFBSTtJQUVKLFVBQVUsRUFBVixpQkFBVTtJQUNWLE1BQU07SUFDTixJQUFJLEVBQUosY0FBSTtJQUNKLE1BQU0sRUFBRSxDQUFDLEtBQWEsRUFBRSxFQUFFLENBQUMsSUFBSSx1QkFBZ0IsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDO0lBQzFELFNBQVMsRUFBRSxrQkFBUyxDQUFDLElBQUk7SUFDekIsV0FBVyxFQUFFLGFBQWE7Q0FDM0IsQ0FBQyJ9
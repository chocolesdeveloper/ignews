"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockConfigForm = void 0;
const react_oembed_container_1 = __importDefault(require("react-oembed-container"));
const theme_ui_1 = require("theme-ui");
const formik_1 = require("formik");
const _1 = require(".");
const consts_1 = require("@lib/consts");
const react_1 = require("react");
const InputDeleteIcon_1 = __importDefault(require("components/InputDeleteIcon"));
const Form = () => {
    var _a;
    const { values, setFieldValue } = formik_1.useFormikContext();
    const contentValue = (_a = values[consts_1.MockConfigKey]) === null || _a === void 0 ? void 0 : _a.content;
    const [state, setState] = react_1.useState({
        ...contentValue,
        err: null,
        loading: false,
    });
    const onSelect = (url, oembed) => {
        setFieldValue(consts_1.MockConfigKey, {
            content: {
                url,
                oembed,
            },
        });
    };
    const reset = () => {
        setState({
            oembed: null,
            loading: false,
            err: null,
            url: "",
        });
        setFieldValue(consts_1.MockConfigKey, {});
    };
    const getOembed = async (url) => {
        setState({ ...state, url });
        if (!url || !url.length) {
            return reset();
        }
        fetch("/api/parse-oembed", {
            headers: {
                Accept: "application/json",
                "Content-Type": "application/json",
            },
            method: "POST",
            body: JSON.stringify({ url }),
        })
            .then(async (res) => {
            const json = await res.json();
            setState({ url, ...json, loading: false });
            if (json.oembed) {
                onSelect(url, json.oembed);
            }
        })
            .catch((e) => {
            console.error(e);
            setState({
                url,
                oembed: null,
                err: "Unable to fetch oembed",
                loading: false,
            });
        });
    };
    return (<theme_ui_1.Box>
      <theme_ui_1.Label variant="label.primary" sx={{ display: "block", maxWidth: "400px" }}>
        <theme_ui_1.Text as="span">Media url</theme_ui_1.Text>
        <theme_ui_1.Input value={state.url || ""} placeholder="https://www.youtube.com/watch?v=fiOwHYFkUz0" onFocus={(e) => e.target.select()} onChange={(e) => getOembed(e.target.value.trim())}/>
        <InputDeleteIcon_1.default onClick={reset}/>
        <theme_ui_1.Box mt={2}>
          {state.err ? <theme_ui_1.Text sx={{ color: "error" }}>{state.err}</theme_ui_1.Text> : null}
          {state.oembed ? (<theme_ui_1.Box>
                <react_oembed_container_1.default markup={state.oembed.html}>
                  <div dangerouslySetInnerHTML={{ __html: state.oembed.html }}/>
                </react_oembed_container_1.default>
                <theme_ui_1.Text mt={1} as="p">
                  Rendered with{" "}
                  <a target="_blank" href="https://www.npmjs.com/package/react-oembed-container">
                    react-oembed-container
                  </a>
                </theme_ui_1.Text>
              </theme_ui_1.Box>) : null}
        </theme_ui_1.Box>
      </theme_ui_1.Label>
    </theme_ui_1.Box>);
};
Form.initialValues = _1.initialValues;
exports.MockConfigForm = Form;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9ybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYi9tb2RlbHMvY29tbW9uL3dpZGdldHMvRW1iZWQvTW9jay9Gb3JtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9GQUFvRDtBQUNwRCx1Q0FBbUQ7QUFDbkQsbUNBQTBDO0FBRTFDLHdCQUFrQztBQUVsQyx3Q0FBNEM7QUFDNUMsaUNBQWlDO0FBRWpDLGlGQUF5RDtBQUV6RCxNQUFNLElBQUksR0FBRyxHQUFHLEVBQUU7O0lBRWhCLE1BQU0sRUFBRSxNQUFNLEVBQUUsYUFBYSxFQUFFLEdBQUcseUJBQWdCLEVBQUUsQ0FBQztJQUVyRCxNQUFNLFlBQVksR0FBRyxNQUFBLE1BQU0sQ0FBQyxzQkFBYSxDQUFDLDBDQUFFLE9BQU8sQ0FBQztJQUVwRCxNQUFNLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxHQUFHLGdCQUFRLENBQUM7UUFDakMsR0FBRyxZQUFZO1FBQ2YsR0FBRyxFQUFFLElBQUk7UUFDVCxPQUFPLEVBQUUsS0FBSztLQUNmLENBQUMsQ0FBQztJQUVILE1BQU0sUUFBUSxHQUFHLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxFQUFFO1FBQy9CLGFBQWEsQ0FBQyxzQkFBYSxFQUFFO1lBQzNCLE9BQU8sRUFBRTtnQkFFUCxHQUFHO2dCQUVILE1BQU07YUFDUDtTQUNGLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztJQUVGLE1BQU0sS0FBSyxHQUFHLEdBQUcsRUFBRTtRQUNqQixRQUFRLENBQUM7WUFDUCxNQUFNLEVBQUUsSUFBSTtZQUNaLE9BQU8sRUFBRSxLQUFLO1lBQ2QsR0FBRyxFQUFFLElBQUk7WUFDVCxHQUFHLEVBQUUsRUFBRTtTQUNSLENBQUMsQ0FBQztRQUNILGFBQWEsQ0FBQyxzQkFBYSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ25DLENBQUMsQ0FBQztJQUdGLE1BQU0sU0FBUyxHQUFHLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUU5QixRQUFRLENBQUMsRUFBRSxHQUFHLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBRTVCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFO1lBQ3ZCLE9BQU8sS0FBSyxFQUFFLENBQUM7U0FDaEI7UUFDRCxLQUFLLENBQUMsbUJBQW1CLEVBQUU7WUFDekIsT0FBTyxFQUFFO2dCQUNQLE1BQU0sRUFBRSxrQkFBa0I7Z0JBQzFCLGNBQWMsRUFBRSxrQkFBa0I7YUFDbkM7WUFDRCxNQUFNLEVBQUUsTUFBTTtZQUVkLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7U0FDOUIsQ0FBQzthQUNDLElBQUksQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUU7WUFFbEIsTUFBTSxJQUFJLEdBQUcsTUFBTSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7WUFFOUIsUUFBUSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1lBRTNDLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtnQkFFZixRQUFRLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUM1QjtRQUNILENBQUMsQ0FBQzthQUNELEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1lBQ1gsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQixRQUFRLENBQUM7Z0JBRVAsR0FBRztnQkFDSCxNQUFNLEVBQUUsSUFBSTtnQkFDWixHQUFHLEVBQUUsd0JBQXdCO2dCQUM3QixPQUFPLEVBQUUsS0FBSzthQUNmLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDO0lBRUYsT0FBTyxDQUNMLENBQUMsY0FBRyxDQUNGO01BQUEsQ0FBQyxnQkFBSyxDQUNKLE9BQU8sQ0FBQyxlQUFlLENBQ3ZCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FFNUM7UUFBQSxDQUFDLGVBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxlQUFJLENBQy9CO1FBQUEsQ0FBQyxnQkFBSyxDQUVKLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLENBQ3ZCLFdBQVcsQ0FBQyw2Q0FBNkMsQ0FDekQsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FDbEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBRXBEO1FBQUEsQ0FBQyx5QkFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUNoQztRQUFBLENBQUMsY0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUNUO1VBQUEsQ0FFRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLGVBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLGVBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBRXJFO1VBQUEsQ0FFRSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUNiLENBQUMsY0FBRyxDQUNGO2dCQUFBLENBQUMsZ0NBQWMsQ0FFYixNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUUxQjtrQkFBQSxDQUFDLEdBQUcsQ0FFRix1QkFBdUIsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsRUFFM0Q7Z0JBQUEsRUFBRSxnQ0FBYyxDQUNoQjtnQkFBQSxDQUFDLGVBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUNqQjsrQkFBYSxDQUFDLEdBQUcsQ0FDakI7a0JBQUEsQ0FBQyxDQUFDLENBQ0EsTUFBTSxDQUFDLFFBQVEsQ0FDZixJQUFJLENBQUMsc0RBQXNELENBRTNEOztrQkFDRixFQUFFLENBQUMsQ0FDTDtnQkFBQSxFQUFFLGVBQUksQ0FDUjtjQUFBLEVBQUUsY0FBRyxDQUFDLENBQ1AsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUVaO1FBQUEsRUFBRSxjQUFHLENBQ1A7TUFBQSxFQUFFLGdCQUFLLENBQ1Q7SUFBQSxFQUFFLGNBQUcsQ0FBQyxDQUNQLENBQUM7QUFDSixDQUFDLENBQUM7QUFHRixJQUFJLENBQUMsYUFBYSxHQUFHLGdCQUFhLENBQUM7QUFFdEIsUUFBQSxjQUFjLEdBQUcsSUFBSSxDQUFDIn0=
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.simulatorIsSupported = exports.sanitizeSbId = exports.createDefaultHandleMockContentFunction = exports.createDefaultWidgetValues = exports.compareVariations = exports.ensureWidgetTypeExistence = exports.ensureDnDDestination = exports.removeProp = void 0;
const yup = __importStar(require("yup"));
const fast_deep_equal_1 = __importDefault(require("fast-deep-equal"));
const Framework_1 = require("@slicemachine/core/build/models/Framework");
const defaults_1 = require("../forms/defaults");
const forms_1 = require("../forms");
const removeProp = (obj, prop) => {
    const { [prop]: __removed, ...rest } = obj;
    return rest;
};
exports.removeProp = removeProp;
const ensureDnDDestination = (result) => {
    if (!result.destination || result.source.index === result.destination.index) {
        return true;
    }
    if (result.source.droppableId !== result.destination.droppableId) {
        return true;
    }
    return false;
};
exports.ensureDnDDestination = ensureDnDDestination;
const ensureWidgetTypeExistence = (Widgets, type) => {
    const widget = Widgets[type];
    if (!widget) {
        console.log(`Could not find widget with type name "${type}".`);
        return true;
    }
    return false;
};
exports.ensureWidgetTypeExistence = ensureWidgetTypeExistence;
const compareVariations = (lhs, rhs) => {
    return fast_deep_equal_1.default(lhs.map((e) => ({ ...e, imageUrl: undefined })), rhs.map((e) => ({ ...e, imageUrl: undefined })));
};
exports.compareVariations = compareVariations;
const createDefaultWidgetValues = (TYPE_NAME) => ({
    TYPE_NAME,
    FormFields: defaults_1.DefaultFields,
    schema: yup.object().shape({
        type: yup.string().test({
            name: "type",
            test: function (value) {
                return value === TYPE_NAME;
            },
        }),
        config: forms_1.createValidationSchema(exports.removeProp(defaults_1.DefaultFields, "id")),
    }),
    create: () => ({
        type: TYPE_NAME,
        config: forms_1.createInitialValues(exports.removeProp(defaults_1.DefaultFields, "id")),
    }),
});
exports.createDefaultWidgetValues = createDefaultWidgetValues;
const createDefaultHandleMockContentFunction = (widget, TYPE_NAME, checkFn) => {
    return function handleMockContent(mockContent, config) {
        if (!checkFn(mockContent, config)) {
            console.error(`Type check for type "${TYPE_NAME}" failed. Using default mock configuration`);
            if (widget.handleMockConfig) {
                return widget.handleMockConfig(null, config);
            }
        }
        return mockContent;
    };
};
exports.createDefaultHandleMockContentFunction = createDefaultHandleMockContentFunction;
const sanitizeSbId = (str) => {
    return str
        .toLowerCase()
        .replace(/[ ’–—―′¿'`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, "-")
        .replace(/-+/g, "-")
        .replace(/^-+/, "")
        .replace(/-+$/, "");
};
exports.sanitizeSbId = sanitizeSbId;
const simulatorIsSupported = (framework) => {
    return [
        Framework_1.Frameworks.next,
        Framework_1.Frameworks.nuxt,
        Framework_1.Frameworks.previousNext,
        Framework_1.Frameworks.previousNuxt,
    ].includes(framework);
};
exports.simulatorIsSupported = simulatorIsSupported;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvdXRpbHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHlDQUEyQjtBQUMzQixzRUFBb0M7QUFHcEMseUVBQXVFO0FBRXZFLGdEQUFrRDtBQUNsRCxvQ0FBdUU7QUFJaEUsTUFBTSxVQUFVLEdBQUcsQ0FBQyxHQUE2QixFQUFFLElBQVksRUFBRSxFQUFFO0lBRXhFLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLFNBQVMsRUFBRSxHQUFHLElBQUksRUFBRSxHQUFHLEdBQUcsQ0FBQztJQUMzQyxPQUFPLElBQUksQ0FBQztBQUNkLENBQUMsQ0FBQztBQUpXLFFBQUEsVUFBVSxjQUlyQjtBQUVLLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxNQUdwQyxFQUdDLEVBQUU7SUFDRixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssS0FBSyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRTtRQUMzRSxPQUFPLElBQUksQ0FBQztLQUNiO0lBQ0QsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsS0FBSyxNQUFNLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRTtRQUNoRSxPQUFPLElBQUksQ0FBQztLQUNiO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLENBQUM7QUFkVyxRQUFBLG9CQUFvQix3QkFjL0I7QUFFSyxNQUFNLHlCQUF5QixHQUFHLENBRXZDLE9BQTBDLEVBQzFDLElBQVksRUFDWixFQUFFO0lBRUYsTUFBTSxNQUFNLEdBQXFCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1gsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5Q0FBeUMsSUFBSSxJQUFJLENBQUMsQ0FBQztRQUMvRCxPQUFPLElBQUks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
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const formik_1 = require("formik");
const theme_ui_1 = require("theme-ui");
const FormFieldArray = ({ field, meta, fieldName, label, focusOnNewEntry = true, inputPlaceholder, buttonLabel, }) => {
    const [prevLen, setPrevLen] = react_1.useState(meta.value.length);
    const refs = react_1.useRef(new Array(meta.value.length));
    react_1.useEffect(() => {
        refs.current = refs.current.slice(0, meta.value.length);
    }, [meta.value.length]);
    react_1.useEffect(() => {
        const len = refs.current.length;
        if (focusOnNewEntry && len > prevLen) {
            refs.current[len - 1].focus();
        }
        setPrevLen(len);
    }, [refs.current.length]);
    return (<react_1.Fragment>
      <theme_ui_1.Label variant="label.primary" htmlFor={fieldName}>
        {label}
        {meta.touched && meta.error ? (<theme_ui_1.Text as="span" variant="text.labelError">
              {meta.error}
            </theme_ui_1.Text>) : null}
      </theme_ui_1.Label>
      <formik_1.FieldArray name={fieldName} id={fieldName} {...field} render={(arrayHelpers) => (<div>
            {field.value && field.value.length > 0
                ?
                    field.value.map((opt, i) => (<theme_ui_1.Flex key={`${fieldName}-${+i + 1}`} my={2}>
                      <theme_ui_1.Input placeholder={inputPlaceholder} name={`${fieldName}.${i}`} value={opt} ref={(el) => (refs.current[i] = el)} onChange={({ target: { value } }) => arrayHelpers.replace(i, value)}/>
                      <theme_ui_1.Button xs ml={2} type="button" variant="secondary" onClick={() => arrayHelpers.remove(i)}>
                        -
                      </theme_ui_1.Button>
                    </theme_ui_1.Flex>))
                : null}
            <theme_ui_1.Button type="button" onClick={() => arrayHelpers.insert(field.value.length, "")}>
              {buttonLabel}
            </theme_ui_1.Button>
          </div>)}/>
    </react_1.Fragment>);
};
exports.default = FormFieldArray;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJyYXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9jb21wb25lbnRzL0Zvcm1GaWVsZHMvQXJyYXkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBOEQ7QUFFOUQsbUNBQW9DO0FBRXBDLHVDQUE0RDtBQUU1RCxNQUFNLGNBQWMsR0FBRyxDQUFDLEVBQ3RCLEtBQUssRUFDTCxJQUFJLEVBQ0osU0FBUyxFQUNULEtBQUssRUFDTCxlQUFlLEdBQUcsSUFBSSxFQUN0QixnQkFBZ0IsRUFDaEIsV0FBVyxHQUNaLEVBQUUsRUFBRTtJQUVILE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEdBQUcsZ0JBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRTFELE1BQU0sSUFBSSxHQUFHLGNBQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFFbEQsaUJBQVMsQ0FBQyxHQUFHLEVBQUU7UUFFYixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRTFELENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUV4QixpQkFBUyxDQUFDLEdBQUcsRUFBRTtRQUNiLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQ2hDLElBQUksZUFBZSxJQUFJLEdBQUcsR0FBRyxPQUFPLEVBQUU7WUFFcEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDL0I7UUFDRCxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEIsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFD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